======================
exact: trivial
======================

let x = true in
x

---

(source_file
  (let_binding
    (identifier)
    (anf (bool))
  (anf (identifier))))

======================
exact: one flip
======================

let x = flip (1/3) in
x

---

(source_file
  (let_binding
    (identifier)
    (flip (float) (float_op) (float))
  (anf (identifier))))


======================
exact: two flips
======================

let x = flip 0.3333 in
let y = flip 1/4 in
x || y

---

(source_file
  (let_binding
    (identifier)
    (flip (float))
  (let_binding
    (identifier)
    (flip (float) (float_op) (float))
  (anf (anf (identifier)) (bool_biop) (anf (identifier))))))

======================
exact: two flips, implicit 'in's
======================

let x = flip 0.3333
let y = flip 1/4
x || y

---

(source_file
  (let_binding
    (identifier)
    (flip (float))
  (let_binding
    (identifier)
    (flip (float) (float_op) (float))
  (anf (anf (identifier)) (bool_biop) (anf (identifier))))))


===========================
exact: observed two flips
===========================

let x = flip 0.3333 in
let y = flip 1/4 in
let _ = observe (x || y) in
x

---


(source_file
  (let_binding
    (identifier)
    (flip (float))
  (let_binding
    (identifier)
    (flip (float) (float_op) (float))
  (let_binding
    (identifier)
    (observe (anf (anf (identifier)) (bool_biop) (anf (identifier))))
  (anf (identifier))))))


======================
approx: observed two flips
======================

let x = sample (flip 1/3) in
let y = flip 1/4 in
let _ = observe (x || y)
x

---


(source_file
  (let_binding
    (identifier)
    (sample (flip (float) (float_op) (float)))
  (let_binding
    (identifier)
    (flip (float) (float_op) (float))
  (let_binding
    (identifier)
    (observe (anf (anf (identifier)) (bool_biop) (anf (identifier))))
  (anf (identifier))))))
