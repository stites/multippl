======================
exact: trivial
======================

let x : Bool = true in
x : Bool

---

(source_file
  (let_binding
    (identifier) (ty (tBool))
    (anf (bool))
  (ann (identifier) (ty (tBool)))))

======================
exact: trivial with extra annotation
======================

let x : Bool = true in
(x : Bool) : Bool

---

(source_file
  (let_binding
    (identifier) (ty (tBool))
    (anf (bool))
    (ann (identifier) (ty (tBool))) ))


;; ======================
;; exact: one flip
;; ======================
;;
;; let x : Bool = flip (1/3) in
;; (x : Bool) : Bool
;; ---
;;
;;
;; (source_file
;;   (let_binding
;;     (identifier) (ty (tBool))
;;     (flip (float) (float_op) (float))
;;   (ann (identifier) (ty (tBool)))
;;   (ty (tBool))))
;;
;; ======================
;; exact: one flip needs inference
;; ======================
;;
;; let x : Bool = flip (1/3) in
;; x : Bool
;; ---
;;
;; (source_file
;;   (let_binding
;;     (identifier) (ty (tBool))
;;     (flip (float) (float_op) (float))
;;   (ann (identifier)) (ty (tBool))
;;   ))
;;
;;
;; ======================
;; exact: two flips
;; ======================
;;
;; let x : Bool = flip 0.3333 in
;; (let y : Bool = flip 1/4 in
;; ((x:Bool) || (y:Bool)) : Bool ) : Bool
;;
;; ---
;;
;; (source_file
;;   (let_binding
;;     (identifier)
;;     (flip (float))
;;   (let_binding
;;     (identifier)
;;     (flip (float) (float_op) (float))
;;   (anf (anf (identifier)) (bool_biop) (anf (identifier))))))
;;

======================
exact: two flips, implicit 'in's
======================

let x = flip 0.3333
let y = flip 1/4
x || y

---

(source_file
  (let_binding
    (identifier)
    (flip (float))
  (let_binding
    (identifier)
    (flip (float) (float_op) (float))
  (anf (anf (identifier)) (bool_biop) (anf (identifier))))))


===========================
exact: observed two flips
===========================

let x = flip 0.3333 in
let y = flip 1/4 in
let _ = observe (x || y) in
x

---


(source_file
  (let_binding
    (identifier)
    (flip (float))
  (let_binding
    (identifier)
    (flip (float) (float_op) (float))
  (let_binding
    (identifier)
    (observe (anf (anf (identifier)) (bool_biop) (anf (identifier))))
  (anf (identifier))))))


======================
approx: observed two flips
======================

let x = sample (flip 1/3) in
let y = flip 1/4 in
let _ = observe (x || y)
x

---


(source_file
  (let_binding
    (identifier)
    (sample (flip (float) (float_op) (float)))
  (let_binding
    (identifier)
    (flip (float) (float_op) (float))
  (let_binding
    (identifier)
    (observe (anf (anf (identifier)) (bool_biop) (anf (identifier))))
  (anf (identifier))))))
