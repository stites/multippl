======================
sampling: simple
======================

sample {
  x <- true;
  x
}

---

(source_file
  (program
    (slet
      (identifier)
      (sanf (bool))
    (sanf (identifier)))))

======================
sample: typed trivial
======================

sample {
  x  <- true : Bool;
  x : Bool
}

---

(source_file
  (program
    (slet
      (identifier)
      (sann (sanf (bool)) (sty (tyBool)))
    (sann (sanf (identifier)) (sty (tyBool))))))


======================
sample: trivial with vec
======================

sample {
  x <- [true, false];
  x : [Bool]
}

---

(source_file
 (program
  (slet
    (identifier)
    (sanf (svec (sanf (bool)) (sanf (bool))))
    (sann (sanf (identifier)) (sty (tyVec (sty (tyBool))))))))

======================
sample: healthcare
======================

sample {
  age <- discrete(0.35, 0.45, 0.20);
  preExistingCond <-
    if (age == 0) {
      discrete(0.88, 0.10, 0.20)
    } else if (age == 1) {
      discrete(0.75, 0.20, 0.05)
    } else {
      discrete(0.42, 0.53, 0.05)
    };
  outpatientExpenditure <-
    if (age == 0) {
      normal( 60.0,  100.0)
    } else if (age == 1) {
      normal(180.0,  400.0)
    } else {
      normal(360.0, 1600.0)
    };
  anyHospitalStay <-
    if (age == 0) {
      bern( 0.1 )
    } else if (age == 1) {
      bern( 0.25 )
    } else {
      bern( 0.40 )
    };
  daysHospitalStay <-
    if (!anyHospitalStay) {
      0.0
    } else {
      if (age == 0) {
        normal( 1.0, 0.25)
      } else if (age == 1) {
        normal( 4.0, 1.00)
      } else {
        normal( 7.0, 2.25)
      }
    };
  inpatientExpenditure <-
    if (preExistingCond == 0) {
      normal( 100 + (300 * daysHospitalStay), 30^2 )
    } else if (preExistingCond == 1) {
      normal( 100 + (550 * daysHospitalStay), 50^2 )
    } else {
      normal( 100 + (800 * daysHospitalStay), 100^2 )
    };
  taxes <- normal(120 + (1.02 * inpatientExpenditure) + (1.05 * outpatientExpenditure), 10^2);
  taxes
}

----------


(source_file
  (program
    (slet (identifier)
      (sanf (sdiscrete (sanf (float)) (sanf (float)) (sanf (float))))
    (slet (identifier)
      (site (sanf (sanf (identifier)) (compare_op) (sanf (int)))
        (sanf (sdiscrete (sanf (float)) (sanf (float)) (sanf (float))))
        (site (sanf (sanf (identifier)) (compare_op) (sanf (int)))
          (sanf (sdiscrete (sanf (float)) (sanf (float)) (sanf (float))))
          (sanf (sdiscrete (sanf (float)) (sanf (float)) (sanf (float))))))
    (slet (identifier)
      (site (sanf (sanf (identifier)) (compare_op) (sanf (int)))
        (sanf (snormal (sanf (float)) (sanf (float))))
        (site (sanf (sanf (identifier)) (compare_op) (sanf (int)))
          (sanf (snormal (sanf (float)) (sanf (float))))
          (sanf (snormal (sanf (float)) (sanf (float))))))
    (slet (identifier)
      (site (sanf (sanf (identifier)) (compare_op) (sanf (int)))
        (sanf (sbern (sanf (float))))
        (site (sanf (sanf (identifier)) (compare_op) (sanf (int)))
          (sanf (sbern (sanf (float))))
          (sanf (sbern (sanf (float))))))
    (slet (identifier)
      (site (sanf (bool_unop) (sanf (identifier))) (sanf (float))
        (site (sanf (sanf (identifier)) (compare_op) (sanf (int)))
          (sanf (snormal (sanf (float)) (sanf (float))))
          (site (sanf (sanf (identifier)) (compare_op) (sanf (int)))
            (sanf (snormal (sanf (float)) (sanf (float))))
            (sanf (snormal (sanf (float)) (sanf (float)))))))
    (slet (identifier)
      (site (sanf (sanf (identifier)) (compare_op) (sanf (int)))
        (sanf (snormal (sanf (sanf (int)) (numeric_op) (sanf (sanf (int)) (numeric_op) (sanf (identifier)))) (sanf (sanf (int)) (numeric_op) (sanf (int)))))
        (site (sanf (sanf (identifier)) (compare_op) (sanf (int)))
          (sanf (snormal (sanf (sanf (int)) (numeric_op) (sanf (sanf (int)) (numeric_op) (sanf (identifier)))) (sanf (sanf (int)) (numeric_op) (sanf (int)))))
          (sanf (snormal (sanf (sanf (int)) (numeric_op) (sanf (sanf (int)) (numeric_op) (sanf (identifier)))) (sanf (sanf (int)) (numeric_op) (sanf (int)))))))
    (slet
      (identifier)
      (sanf (snormal
          (sanf (sanf (sanf (int)) (numeric_op) (sanf (sanf (float)) (numeric_op) (sanf (identifier)))) (numeric_op) (sanf (sanf (float)) (numeric_op) (sanf (identifier))))
          (sanf (sanf (int)) (numeric_op) (sanf (int)))))
    (sanf (identifier)))))))))))


======================
sample(hybrid): healthcare
======================
sample {
  aph <- exact {
    let age = discrete(0.35, 0.45, 0.20) in
    let preExistingCond =
      if age == 0 then discrete(0.88, 0.10, 0.20) else
      if age == 1 then discrete(0.75, 0.20, 0.05) else
                       discrete(0.42, 0.53, 0.05) in
    let anyHospitalStay =
      if (age == 0) then bern( 0.1 ) else
      if (age == 1) then bern( 0.25 ) else
                         bern( 0.40 ) in
    (age, preExistingCond, anyHospitalStay)
  };

  age <- aph[0];
  preExistingCond <- aph[1];
  anyHospitalStay <- aph[2];

  outpatientExpenditure <-
    if (age == 0) {
      normal( 60.0,  100.0)
    } else if (age == 1) {
      normal(180.0,  400.0)
    } else {
      normal(360.0, 1600.0)
    };

  daysHospitalStay <-
    if (!anyHospitalStay) {
      0.0
    } else {
      if (age == 0) {
        normal( 1.0, 0.25)
      } else if (age == 1) {
        normal( 4.0, 1.00)
      } else {
        normal( 7.0, 2.25)
      }
    };
  inpatientExpenditure <-
    if (preExistingCond == 0) {
      normal( 100 + (300 * daysHospitalStay), 30^2 )
    } else if (preExistingCond == 1) {
      normal( 100 + (550 * daysHospitalStay), 50^2 )
    } else {
      normal( 100 + (800 * daysHospitalStay), 100^2 )
    };
  taxes <- normal(120 + (1.02 * inpatientExpenditure) + (1.05 * outpatientExpenditure), 10^2);
  taxes
}

----------


    (source_file
      (program
        (slet
          (identifier)
          (sexact
            (elet
              (identifier)
              (ediscrete
                (eanf
                  (float))
                (eanf
                  (float))
                (eanf
                  (float)))
              (elet
                (identifier)
                (eite
                  (eanf
                    (eanf
                      (identifier))
                    (compare_op)
                    (eanf
                      (int)))
                  (ediscrete
                    (eanf
                      (float))
                    (eanf
                      (float))
                    (eanf
                      (float)))
                  (eite
                    (eanf
                      (eanf
                        (identifier))
                      (compare_op)
                      (eanf
                        (int)))
                    (ediscrete
                      (eanf
                        (float))
                      (eanf
                        (float))
                      (eanf
                        (float)))
                    (ediscrete
                      (eanf
                        (float))
                      (eanf
                        (float))
                      (eanf
                        (float)))))
                (elet
                  (identifier)
                  (eite
                    (eanf
                      (eanf
                        (identifier))
                      (compare_op)
                      (eanf
                        (int)))
                    (app
                      (identifier)
                      (sanf
                        (float)))
                    (eite
                      (eanf
                        (eanf
                          (identifier))
                        (compare_op)
                        (eanf
                          (int)))
                      (app
                        (identifier)
                        (sanf
                          (float)))
                      (app
                        (identifier)
                        (sanf
                          (float)))))
                  (eprod
                    (eanf
                      (identifier))
                    (eanf
                      (identifier))
                    (eanf
                      (identifier)))))))
          (slet
            (identifier)
            (sanf
              (sprj
                (identifier)
                (int)))
            (slet
              (identifier)
              (sanf
                (sprj
                  (identifier)
                  (int)))
              (slet
                (identifier)
                (sanf
                  (sprj
                    (identifier)
                    (int)))
                (slet
                  (identifier)
                  (site
                    (sanf
                      (sanf
                        (identifier))
                      (compare_op)
                      (sanf
                        (int)))
                    (sanf
                      (snormal
                        (sanf
                          (float))
                        (sanf
                          (float))))
                    (site
                      (sanf
                        (sanf
                          (identifier))
                        (compare_op)
                        (sanf
                          (int)))
                      (sanf
                        (snormal
                          (sanf
                            (float))
                          (sanf
                            (float))))
                      (sanf
                        (snormal
                          (sanf
                            (float))
                          (sanf
                            (float))))))
                  (slet
                    (identifier)
                    (site
                      (sanf
                        (bool_unop)
                        (sanf
                          (identifier)))
                      (sanf
                        (float))
                      (site
                        (sanf
                          (sanf
                            (identifier))
                          (compare_op)
                          (sanf
                            (int)))
                        (sanf
                          (snormal
                            (sanf
                              (float))
                            (sanf
                              (float))))
                        (site
                          (sanf
                            (sanf
                              (identifier))
                            (compare_op)
                            (sanf
                              (int)))
                          (sanf
                            (snormal
                              (sanf
                                (float))
                              (sanf
                                (float))))
                          (sanf
                            (snormal
                              (sanf
                                (float))
                              (sanf
                                (float)))))))
                    (slet
                      (identifier)
                      (site
                        (sanf
                          (sanf
                            (identifier))
                          (compare_op)
                          (sanf
                            (int)))
                        (sanf
                          (snormal
                            (sanf
                              (sanf
                                (int))
                              (numeric_op)
                              (sanf
                                (sanf
                                  (int))
                                (numeric_op)
                                (sanf
                                  (identifier))))
                            (sanf
                              (sanf
                                (int))
                              (numeric_op)
                              (sanf
                                (int)))))
                        (site
                          (sanf
                            (sanf
                              (identifier))
                            (compare_op)
                            (sanf
                              (int)))
                          (sanf
                            (snormal
                              (sanf
                                (sanf
                                  (int))
                                (numeric_op)
                                (sanf
                                  (sanf
                                    (int))
                                  (numeric_op)
                                  (sanf
                                    (identifier))))
                              (sanf
                                (sanf
                                  (int))
                                (numeric_op)
                                (sanf
                                  (int)))))
                          (sanf
                            (snormal
                              (sanf
                                (sanf
                                  (int))
                                (numeric_op)
                                (sanf
                                  (sanf
                                    (int))
                                  (numeric_op)
                                  (sanf
                                    (identifier))))
                              (sanf
                                (sanf
                                  (int))
                                (numeric_op)
                                (sanf
                                  (int)))))))
                      (slet
                        (identifier)
                        (sanf
                          (snormal
                            (sanf
                              (sanf
                                (sanf
                                  (int))
                                (numeric_op)
                                (sanf
                                  (sanf
                                    (float))
                                  (numeric_op)
                                  (sanf
                                    (identifier))))
                              (numeric_op)
                              (sanf
                                (sanf
                                  (float))
                                (numeric_op)
                                (sanf
                                  (identifier))))
                            (sanf
                              (sanf
                                (int))
                              (numeric_op)
                              (sanf
                                (int)))))
                        (sanf
                          (identifier))))))))))))

======================
sample: array access is tucked away in anf
======================
sample {
  aph <- exact { var };
  age <- aph[0];
  age
}

----------

(source_file
    (program
      (slet
        (identifier)
        (sexact
          (eanf
            (identifier)))
        (slet
          (identifier)
          (sanf
            (sprj
              (identifier)
              (int)))
          (sanf
            (identifier))))))


======================
sample(hybrid): arrival problem
======================
sample {
  p <- poisson(0.4);
  r1234 <- exact (iterate(f, true, p));
}

----------
