* Heterogeneous Inference with a Probabilistic Multilanguage
** file structure
- ~nix/~ nix support files
- ~ttg/~ trees that grow macros
- ~tree-sitter-yodel/~ tree sitter grammar and emacs mode (~./yodel-ts-mode.el~)
- ~yodel/~ compiler code
  + ~yodel/src~ compiler source
  + ~yodel/bench~ python CLI to run benchmarks
  + ~yodel/examples~ example programs
  + out-dated folders include:
    * ~yodel/bench_old~ grid based incremental tests
    * ~yodel/exe~ old plotting binaries
* Running the benchmarks
See [[./yodel/bench/README.org][the ~yodel/bench~ folder]]

* Misc
*** A note on the prototype name: /yodel/
Initially named /yodel/, this project was simply designed to collapse "mountains
of BDDs" --  which sounded a bit like yodeling : ). Yodeling also brings the
cows home (convergence, anybody? ðŸ˜‰)


* benchmarking
test a run:

#+begin_example bash
nix build .#docker-bench
(docker load < result)

docker run -v $PWD/dockerdata:/data multippl-bench:latest all --psi-runs 2 --psi-threads 2 --num-threads 4 --num-runs 1)
#+end_example


-
- Residential memory is highest for psi (17.2G for the ~bayesnet/alarm~ evaluation).
