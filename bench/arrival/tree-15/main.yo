exact fn network () -> Bool {
  let n30r = true in
  let n20r = if  n30r then flip 1.0 / 2.0 else false in
  let n31r = if !n20r then flip 1.0 / 2.0 else false in

  let n10r = if  n20r then flip 1.0 / 2.0 else false in
  let n21r = if !n10r then flip 1.0 / 2.0 else false in
  let n32r = if  n21r then flip 1.0 / 2.0 else false in
  let n33r = if !n21r then flip 1.0 / 2.0 else false in

  let n0   = n10r in

  let n10l = if  n0   then flip 1.0 / 2.0 else false in

  let n20l = if  n10l then flip 1.0 / 2.0 else false in
  let n21l = if !n10l then flip 1.0 / 2.0 else false in

  let n30l = if  n20l then flip 1.0 / 2.0 else false in
  let n31l = if !n20l then flip 1.0 / 2.0 else false in
  let n32l = if  n21l then flip 1.0 / 2.0 else false in
  let n33l = if !n21l then flip 1.0 / 2.0 else false in

  observe n32l in

  n0
}


sample {
  ix ~ poisson(3.0);
  ix <- ix + 1;
  npackets <- 0;
  // ps <- [];
  while ix > 0 {
    traverses <- exact(network());
    npackets <- if traverses { npackets + 1 } else { npackets };
    // ps <- push(ps, npackets);
    ix <- ix - 1;
    true
  };
  // trace (ps) npackets
  npackets
}
