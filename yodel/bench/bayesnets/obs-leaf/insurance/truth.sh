#!/usr/bin/env bash
FORCE=0
while [[ "$1" =~ ^- && ! "$1" == "--" ]]; do case $1 in
  -f) FORCE=1 ;;
esac; shift; done
if [[ "$1" == '--' ]]; then shift; fi

declare -a dicevar=(
  "Age"
  "Mileage"
)

# generate
mkdir -p tmp
for out in "${dicevar[@]}"; do
  if [ $FORCE = 1 ] || [ ! -f tmp/"$out.dice.out" ]; then
    cat ./main.dice-partial > tmp/"$out".dice
    echo "$out" >> tmp/"$out.dice"
    echo "$out" > tmp/"$out.dice.out"
    dice "tmp/$out.dice" >> "tmp/$out.dice.out"
  fi
done

# aggregate
echo "# DO NOT MODIFY! this is autogenerated from truth.sh!" > "tmp/truth.py"
(for out in "${dicevar[@]}"; do
    echo -n "$out = "
    awk 'BEGIN{
     row=""
     i=0
    }
    /^[0-9]+\s+[0-9.]+\s*$/{
      if (i == 0) {
        row = row "[" $2
      } else {
        row = row "," $2
      }
      i ++
    }
    END { print row "]" }' "tmp/$out.dice.out"
 done) >> "tmp/truth.py"


cat >> tmp/truth.py <<EOF
from collections import OrderedDict
truthdict = OrderedDict([
EOF

(for out in "${dicevar[@]}"; do
  echo "  (\"$out\", $out)," >> "tmp/truth.py"
done)

cat >> tmp/truth.py <<EOF
])
truth = [sum([i * p for i, p in enumerate(ps)]) for k, ps in truthdict.items()]
if __name__ == "__main__":
    def deltal1(ms, truth):
        return list(map(lambda x: abs(x[0] - x[1]), zip(ms, truth)))
    print('[', ", ".join(['{:0.3f}'.format(i) for i in truth]), ']', " 𝝙", '{:0.3f}'.format(sum(deltal1(truth, [1.0,1.5]))))
EOF

python tmp/truth.py
