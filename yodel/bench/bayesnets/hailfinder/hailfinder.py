import torch
import pyro
import pyro.distributions as dist
def unknown():

    N0_7muVerMo = pyro.sample("N0_7muVerMo", dist.Categorical(probs=torch.tensor([0.25,0.25,0.25,0.25])))

    SubjVertMo = pyro.sample("SubjVertMo", dist.Categorical(probs=torch.tensor([0.15,0.15,0.5,0.2])))

    QGVertMotion = pyro.sample("QGVertMotion", dist.Categorical(probs=torch.tensor([0.15,0.15,0.5,0.2])))

    if N0_7muVerMo == 0 and SubjVertMo == 0 and QGVertMotion == 0: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0,0.0])))
    if N0_7muVerMo == 1 and SubjVertMo == 0 and QGVertMotion == 0: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.9,0.1,0.0,0.0])))
    if N0_7muVerMo == 2 and SubjVertMo == 0 and QGVertMotion == 0: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.7,0.2,0.1,0.0])))
    if N0_7muVerMo == 3 and SubjVertMo == 0 and QGVertMotion == 0: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.2,0.5,0.2,0.1])))
    if N0_7muVerMo == 0 and SubjVertMo == 1 and QGVertMotion == 0: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.9,0.1,0.0,0.0])))
    if N0_7muVerMo == 1 and SubjVertMo == 1 and QGVertMotion == 0: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.7,0.3,0.0,0.0])))
    if N0_7muVerMo == 2 and SubjVertMo == 1 and QGVertMotion == 0: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.15,0.7,0.15,0.0])))
    if N0_7muVerMo == 3 and SubjVertMo == 1 and QGVertMotion == 0: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.1,0.35,0.45,0.1])))
    if N0_7muVerMo == 0 and SubjVertMo == 2 and QGVertMotion == 0: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.7,0.2,0.1,0.0])))
    if N0_7muVerMo == 1 and SubjVertMo == 2 and QGVertMotion == 0: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.15,0.7,0.15,0.0])))
    if N0_7muVerMo == 2 and SubjVertMo == 2 and QGVertMotion == 0: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.2,0.6,0.2,0.0])))
    if N0_7muVerMo == 3 and SubjVertMo == 2 and QGVertMotion == 0: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.1,0.2,0.6,0.1])))
    if N0_7muVerMo == 0 and SubjVertMo == 3 and QGVertMotion == 0: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.2,0.5,0.2,0.1])))
    if N0_7muVerMo == 1 and SubjVertMo == 3 and QGVertMotion == 0: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.1,0.35,0.45,0.1])))
    if N0_7muVerMo == 2 and SubjVertMo == 3 and QGVertMotion == 0: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.1,0.2,0.6,0.1])))
    if N0_7muVerMo == 3 and SubjVertMo == 3 and QGVertMotion == 0: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.1,0.1,0.2,0.6])))
    if N0_7muVerMo == 0 and SubjVertMo == 0 and QGVertMotion == 1: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.9,0.1,0.0,0.0])))
    if N0_7muVerMo == 1 and SubjVertMo == 0 and QGVertMotion == 1: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.7,0.3,0.0,0.0])))
    if N0_7muVerMo == 2 and SubjVertMo == 0 and QGVertMotion == 1: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.15,0.7,0.15,0.0])))
    if N0_7muVerMo == 3 and SubjVertMo == 0 and QGVertMotion == 1: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.1,0.35,0.45,0.1])))
    if N0_7muVerMo == 0 and SubjVertMo == 1 and QGVertMotion == 1: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.7,0.3,0.0,0.0])))
    if N0_7muVerMo == 1 and SubjVertMo == 1 and QGVertMotion == 1: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,1.0,0.0,0.0])))
    if N0_7muVerMo == 2 and SubjVertMo == 1 and QGVertMotion == 1: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.7,0.3,0.0])))
    if N0_7muVerMo == 3 and SubjVertMo == 1 and QGVertMotion == 1: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.2,0.7,0.1])))
    if N0_7muVerMo == 0 and SubjVertMo == 2 and QGVertMotion == 1: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.15,0.7,0.15,0.0])))
    if N0_7muVerMo == 1 and SubjVertMo == 2 and QGVertMotion == 1: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.7,0.3,0.0])))
    if N0_7muVerMo == 2 and SubjVertMo == 2 and QGVertMotion == 1: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.3,0.7,0.0])))
    if N0_7muVerMo == 3 and SubjVertMo == 2 and QGVertMotion == 1: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.15,0.5,0.35])))
    if N0_7muVerMo == 0 and SubjVertMo == 3 and QGVertMotion == 1: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.1,0.35,0.45,0.1])))
    if N0_7muVerMo == 1 and SubjVertMo == 3 and QGVertMotion == 1: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.2,0.7,0.1])))
    if N0_7muVerMo == 2 and SubjVertMo == 3 and QGVertMotion == 1: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.15,0.5,0.35])))
    if N0_7muVerMo == 3 and SubjVertMo == 3 and QGVertMotion == 1: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.1,0.2,0.7])))
    if N0_7muVerMo == 0 and SubjVertMo == 0 and QGVertMotion == 2: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.7,0.2,0.1,0.0])))
    if N0_7muVerMo == 1 and SubjVertMo == 0 and QGVertMotion == 2: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.15,0.7,0.15,0.0])))
    if N0_7muVerMo == 2 and SubjVertMo == 0 and QGVertMotion == 2: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.2,0.6,0.2,0.0])))
    if N0_7muVerMo == 3 and SubjVertMo == 0 and QGVertMotion == 2: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.1,0.2,0.6,0.1])))
    if N0_7muVerMo == 0 and SubjVertMo == 1 and QGVertMotion == 2: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.15,0.7,0.15,0.0])))
    if N0_7muVerMo == 1 and SubjVertMo == 1 and QGVertMotion == 2: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.7,0.3,0.0])))
    if N0_7muVerMo == 2 and SubjVertMo == 1 and QGVertMotion == 2: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.3,0.7,0.0])))
    if N0_7muVerMo == 3 and SubjVertMo == 1 and QGVertMotion == 2: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.15,0.5,0.35])))
    if N0_7muVerMo == 0 and SubjVertMo == 2 and QGVertMotion == 2: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.2,0.6,0.2,0.0])))
    if N0_7muVerMo == 1 and SubjVertMo == 2 and QGVertMotion == 2: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.3,0.7,0.0])))
    if N0_7muVerMo == 2 and SubjVertMo == 2 and QGVertMotion == 2: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.0,1.0,0.0])))
    if N0_7muVerMo == 3 and SubjVertMo == 2 and QGVertMotion == 2: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.0,0.7,0.3])))
    if N0_7muVerMo == 0 and SubjVertMo == 3 and QGVertMotion == 2: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.1,0.2,0.6,0.1])))
    if N0_7muVerMo == 1 and SubjVertMo == 3 and QGVertMotion == 2: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.15,0.5,0.35])))
    if N0_7muVerMo == 2 and SubjVertMo == 3 and QGVertMotion == 2: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.0,0.7,0.3])))
    if N0_7muVerMo == 3 and SubjVertMo == 3 and QGVertMotion == 2: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.0,0.3,0.7])))
    if N0_7muVerMo == 0 and SubjVertMo == 0 and QGVertMotion == 3: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.2,0.5,0.2,0.1])))
    if N0_7muVerMo == 1 and SubjVertMo == 0 and QGVertMotion == 3: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.1,0.35,0.45,0.1])))
    if N0_7muVerMo == 2 and SubjVertMo == 0 and QGVertMotion == 3: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.1,0.2,0.6,0.1])))
    if N0_7muVerMo == 3 and SubjVertMo == 0 and QGVertMotion == 3: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.1,0.1,0.2,0.6])))
    if N0_7muVerMo == 0 and SubjVertMo == 1 and QGVertMotion == 3: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.1,0.35,0.45,0.1])))
    if N0_7muVerMo == 1 and SubjVertMo == 1 and QGVertMotion == 3: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.2,0.7,0.1])))
    if N0_7muVerMo == 2 and SubjVertMo == 1 and QGVertMotion == 3: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.15,0.5,0.35])))
    if N0_7muVerMo == 3 and SubjVertMo == 1 and QGVertMotion == 3: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.1,0.2,0.7])))
    if N0_7muVerMo == 0 and SubjVertMo == 2 and QGVertMotion == 3: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.1,0.2,0.6,0.1])))
    if N0_7muVerMo == 1 and SubjVertMo == 2 and QGVertMotion == 3: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.15,0.5,0.35])))
    if N0_7muVerMo == 2 and SubjVertMo == 2 and QGVertMotion == 3: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.0,0.7,0.3])))
    if N0_7muVerMo == 3 and SubjVertMo == 2 and QGVertMotion == 3: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.0,0.3,0.7])))
    if N0_7muVerMo == 0 and SubjVertMo == 3 and QGVertMotion == 3: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.1,0.1,0.2,0.6])))
    if N0_7muVerMo == 1 and SubjVertMo == 3 and QGVertMotion == 3: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.1,0.2,0.7])))
    if N0_7muVerMo == 2 and SubjVertMo == 3 and QGVertMotion == 3: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.0,0.3,0.7])))
    if N0_7muVerMo == 3 and SubjVertMo == 3 and QGVertMotion == 3: CombVerMo = pyro.sample("CombVerMo", dist.Categorical(probs=torch.tensor([0.0,0.0,0.0,1.0])))

    if CombVerMo == 0: AreaMeso_ALS = pyro.sample("AreaMeso_ALS", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0,0.0])))
    if CombVerMo == 1: AreaMeso_ALS = pyro.sample("AreaMeso_ALS", dist.Categorical(probs=torch.tensor([0.0,1.0,0.0,0.0])))
    if CombVerMo == 2: AreaMeso_ALS = pyro.sample("AreaMeso_ALS", dist.Categorical(probs=torch.tensor([0.0,0.0,1.0,0.0])))
    if CombVerMo == 3: AreaMeso_ALS = pyro.sample("AreaMeso_ALS", dist.Categorical(probs=torch.tensor([0.0,0.0,0.0,1.0])))

    SatContMoist = pyro.sample("SatContMoist", dist.Categorical(probs=torch.tensor([0.15,0.2,0.4,0.25])))

    RaoContMoist = pyro.sample("RaoContMoist", dist.Categorical(probs=torch.tensor([0.15,0.2,0.4,0.25])))

    if SatContMoist == 0 and RaoContMoist == 0: CombMoisture = pyro.sample("CombMoisture", dist.Categorical(probs=torch.tensor([0.9,0.1,0.0,0.0])))
    if SatContMoist == 1 and RaoContMoist == 0: CombMoisture = pyro.sample("CombMoisture", dist.Categorical(probs=torch.tensor([0.55,0.4,5.0e-2,0.0])))
    if SatContMoist == 2 and RaoContMoist == 0: CombMoisture = pyro.sample("CombMoisture", dist.Categorical(probs=torch.tensor([0.25,0.3,0.35,0.1])))
    if SatContMoist == 3 and RaoContMoist == 0: CombMoisture = pyro.sample("CombMoisture", dist.Categorical(probs=torch.tensor([0.25,0.25,0.25,0.25])))
    if SatContMoist == 0 and RaoContMoist == 1: CombMoisture = pyro.sample("CombMoisture", dist.Categorical(probs=torch.tensor([0.6,0.35,5.0e-2,0.0])))
    if SatContMoist == 1 and RaoContMoist == 1: CombMoisture = pyro.sample("CombMoisture", dist.Categorical(probs=torch.tensor([0.15,0.6,0.2,5.0e-2])))
    if SatContMoist == 2 and RaoContMoist == 1: CombMoisture = pyro.sample("CombMoisture", dist.Categorical(probs=torch.tensor([0.1,0.35,0.5,5.0e-2])))
    if SatContMoist == 3 and RaoContMoist == 1: CombMoisture = pyro.sample("CombMoisture", dist.Categorical(probs=torch.tensor([0.25,0.25,0.25,0.25])))
    if SatContMoist == 0 and RaoContMoist == 2: CombMoisture = pyro.sample("CombMoisture", dist.Categorical(probs=torch.tensor([0.3,0.5,0.2,0.0])))
    if SatContMoist == 1 and RaoContMoist == 2: CombMoisture = pyro.sample("CombMoisture", dist.Categorical(probs=torch.tensor([5.0e-2,0.4,0.45,0.1])))
    if SatContMoist == 2 and RaoContMoist == 2: CombMoisture = pyro.sample("CombMoisture", dist.Categorical(probs=torch.tensor([0.0,0.15,0.7,0.15])))
    if SatContMoist == 3 and RaoContMoist == 2: CombMoisture = pyro.sample("CombMoisture", dist.Categorical(probs=torch.tensor([0.25,0.25,0.25,0.25])))
    if SatContMoist == 0 and RaoContMoist == 3: CombMoisture = pyro.sample("CombMoisture", dist.Categorical(probs=torch.tensor([0.25,0.35,0.25,0.15])))
    if SatContMoist == 1 and RaoContMoist == 3: CombMoisture = pyro.sample("CombMoisture", dist.Categorical(probs=torch.tensor([0.1,0.3,0.3,0.3])))
    if SatContMoist == 2 and RaoContMoist == 3: CombMoisture = pyro.sample("CombMoisture", dist.Categorical(probs=torch.tensor([0.0,0.1,0.4,0.5])))
    if SatContMoist == 3 and RaoContMoist == 3: CombMoisture = pyro.sample("CombMoisture", dist.Categorical(probs=torch.tensor([0.25,0.25,0.25,0.25])))

    if AreaMeso_ALS == 0 and CombMoisture == 0: AreaMoDryAir = pyro.sample("AreaMoDryAir", dist.Categorical(probs=torch.tensor([0.99,1.0e-2,0.0,0.0])))
    if AreaMeso_ALS == 1 and CombMoisture == 0: AreaMoDryAir = pyro.sample("AreaMoDryAir", dist.Categorical(probs=torch.tensor([0.8,0.2,0.0,0.0])))
    if AreaMeso_ALS == 2 and CombMoisture == 0: AreaMoDryAir = pyro.sample("AreaMoDryAir", dist.Categorical(probs=torch.tensor([0.7,0.29,1.0e-2,0.0])))
    if AreaMeso_ALS == 3 and CombMoisture == 0: AreaMoDryAir = pyro.sample("AreaMoDryAir", dist.Categorical(probs=torch.tensor([0.2,0.74,6.0e-2,0.0])))
    if AreaMeso_ALS == 0 and CombMoisture == 1: AreaMoDryAir = pyro.sample("AreaMoDryAir", dist.Categorical(probs=torch.tensor([0.7,0.29,1.0e-2,0.0])))
    if AreaMeso_ALS == 1 and CombMoisture == 1: AreaMoDryAir = pyro.sample("AreaMoDryAir", dist.Categorical(probs=torch.tensor([0.35,0.55,0.1,0.0])))
    if AreaMeso_ALS == 2 and CombMoisture == 1: AreaMoDryAir = pyro.sample("AreaMoDryAir", dist.Categorical(probs=torch.tensor([0.2,0.6,0.2,0.0])))
    if AreaMeso_ALS == 3 and CombMoisture == 1: AreaMoDryAir = pyro.sample("AreaMoDryAir", dist.Categorical(probs=torch.tensor([5.0e-2,0.4,0.45,0.1])))
    if AreaMeso_ALS == 0 and CombMoisture == 2: AreaMoDryAir = pyro.sample("AreaMoDryAir", dist.Categorical(probs=torch.tensor([0.2,0.55,0.24,1.0e-2])))
    if AreaMeso_ALS == 1 and CombMoisture == 2: AreaMoDryAir = pyro.sample("AreaMoDryAir", dist.Categorical(probs=torch.tensor([1.0e-2,0.39,0.55,5.0e-2])))
    if AreaMeso_ALS == 2 and CombMoisture == 2: AreaMoDryAir = pyro.sample("AreaMoDryAir", dist.Categorical(probs=torch.tensor([1.0e-2,9.0e-2,0.8,0.1])))
    if AreaMeso_ALS == 3 and CombMoisture == 2: AreaMoDryAir = pyro.sample("AreaMoDryAir", dist.Categorical(probs=torch.tensor([0.0,5.0e-2,0.5,0.45])))
    if AreaMeso_ALS == 0 and CombMoisture == 3: AreaMoDryAir = pyro.sample("AreaMoDryAir", dist.Categorical(probs=torch.tensor([0.0,0.25,0.55,0.2])))
    if AreaMeso_ALS == 1 and CombMoisture == 3: AreaMoDryAir = pyro.sample("AreaMoDryAir", dist.Categorical(probs=torch.tensor([0.0,2.0e-2,0.43,0.55])))
    if AreaMeso_ALS == 2 and CombMoisture == 3: AreaMoDryAir = pyro.sample("AreaMoDryAir", dist.Categorical(probs=torch.tensor([0.0,0.0,0.3,0.7])))
    if AreaMeso_ALS == 3 and CombMoisture == 3: AreaMoDryAir = pyro.sample("AreaMoDryAir", dist.Categorical(probs=torch.tensor([0.0,0.0,1.0e-2,0.99])))

    VISCloudCov = pyro.sample("VISCloudCov", dist.Categorical(probs=torch.tensor([0.1,0.5,0.4])))

    IRCloudCover = pyro.sample("IRCloudCover", dist.Categorical(probs=torch.tensor([0.15,0.45,0.4])))

    if VISCloudCov == 0 and IRCloudCover == 0: CombClouds = pyro.sample("CombClouds", dist.Categorical(probs=torch.tensor([0.95,4.0e-2,1.0e-2])))
    if VISCloudCov == 1 and IRCloudCover == 0: CombClouds = pyro.sample("CombClouds", dist.Categorical(probs=torch.tensor([0.45,0.52,3.0e-2])))
    if VISCloudCov == 2 and IRCloudCover == 0: CombClouds = pyro.sample("CombClouds", dist.Categorical(probs=torch.tensor([0.1,0.4,0.5])))
    if VISCloudCov == 0 and IRCloudCover == 1: CombClouds = pyro.sample("CombClouds", dist.Categorical(probs=torch.tensor([0.85,0.13,2.0e-2])))
    if VISCloudCov == 1 and IRCloudCover == 1: CombClouds = pyro.sample("CombClouds", dist.Categorical(probs=torch.tensor([0.1,0.8,0.1])))
    if VISCloudCov == 2 and IRCloudCover == 1: CombClouds = pyro.sample("CombClouds", dist.Categorical(probs=torch.tensor([2.0e-2,0.28,0.7])))
    if VISCloudCov == 0 and IRCloudCover == 2: CombClouds = pyro.sample("CombClouds", dist.Categorical(probs=torch.tensor([0.8,0.1,0.1])))
    if VISCloudCov == 1 and IRCloudCover == 2: CombClouds = pyro.sample("CombClouds", dist.Categorical(probs=torch.tensor([5.0e-2,0.45,0.5])))
    if VISCloudCov == 2 and IRCloudCover == 2: CombClouds = pyro.sample("CombClouds", dist.Categorical(probs=torch.tensor([0.0,2.0e-2,0.98])))

    if AreaMoDryAir == 0 and AreaMeso_ALS == 0 and CombClouds == 0: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0])))
    if AreaMoDryAir == 1 and AreaMeso_ALS == 0 and CombClouds == 0: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.92,8.0e-2,0.0])))
    if AreaMoDryAir == 2 and AreaMeso_ALS == 0 and CombClouds == 0: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.88,0.12,0.0])))
    if AreaMoDryAir == 3 and AreaMeso_ALS == 0 and CombClouds == 0: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.85,0.14,1.0e-2])))
    if AreaMoDryAir == 0 and AreaMeso_ALS == 1 and CombClouds == 0: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.95,5.0e-2,0.0])))
    if AreaMoDryAir == 1 and AreaMeso_ALS == 1 and CombClouds == 0: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.9,9.0e-2,1.0e-2])))
    if AreaMoDryAir == 2 and AreaMeso_ALS == 1 and CombClouds == 0: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.85,0.15,0.0])))
    if AreaMoDryAir == 3 and AreaMeso_ALS == 1 and CombClouds == 0: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.6,0.39,1.0e-2])))
    if AreaMoDryAir == 0 and AreaMeso_ALS == 2 and CombClouds == 0: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.93,7.0e-2,0.0])))
    if AreaMoDryAir == 1 and AreaMeso_ALS == 2 and CombClouds == 0: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.8,0.2,0.0])))
    if AreaMoDryAir == 2 and AreaMeso_ALS == 2 and CombClouds == 0: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.8,0.18,2.0e-2])))
    if AreaMoDryAir == 3 and AreaMeso_ALS == 2 and CombClouds == 0: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.78,0.2,2.0e-2])))
    if AreaMoDryAir == 0 and AreaMeso_ALS == 3 and CombClouds == 0: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.74,0.25,1.0e-2])))
    if AreaMoDryAir == 1 and AreaMeso_ALS == 3 and CombClouds == 0: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.65,0.34,1.0e-2])))
    if AreaMoDryAir == 2 and AreaMeso_ALS == 3 and CombClouds == 0: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.5,0.48,2.0e-2])))
    if AreaMoDryAir == 3 and AreaMeso_ALS == 3 and CombClouds == 0: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.42,0.55,3.0e-2])))
    if AreaMoDryAir == 0 and AreaMeso_ALS == 0 and CombClouds == 1: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.85,0.15,0.0])))
    if AreaMoDryAir == 1 and AreaMeso_ALS == 0 and CombClouds == 1: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.7,0.29,1.0e-2])))
    if AreaMoDryAir == 2 and AreaMeso_ALS == 0 and CombClouds == 1: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.4,0.5,0.1])))
    if AreaMoDryAir == 3 and AreaMeso_ALS == 0 and CombClouds == 1: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.55,0.43,2.0e-2])))
    if AreaMoDryAir == 0 and AreaMeso_ALS == 1 and CombClouds == 1: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.4,0.55,5.0e-2])))
    if AreaMoDryAir == 1 and AreaMeso_ALS == 1 and CombClouds == 1: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.25,0.6,0.15])))
    if AreaMoDryAir == 2 and AreaMeso_ALS == 1 and CombClouds == 1: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.15,0.75,0.1])))
    if AreaMoDryAir == 3 and AreaMeso_ALS == 1 and CombClouds == 1: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([1.0e-2,0.9,9.0e-2])))
    if AreaMoDryAir == 0 and AreaMeso_ALS == 2 and CombClouds == 1: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.2,0.78,2.0e-2])))
    if AreaMoDryAir == 1 and AreaMeso_ALS == 2 and CombClouds == 1: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([1.0e-2,0.89,0.1])))
    if AreaMoDryAir == 2 and AreaMeso_ALS == 2 and CombClouds == 1: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([3.0e-2,0.85,0.12])))
    if AreaMoDryAir == 3 and AreaMeso_ALS == 2 and CombClouds == 1: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([1.0e-2,0.74,0.25])))
    if AreaMoDryAir == 0 and AreaMeso_ALS == 3 and CombClouds == 1: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.0,0.5,0.5])))
    if AreaMoDryAir == 1 and AreaMeso_ALS == 3 and CombClouds == 1: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.0,0.4,0.6])))
    if AreaMoDryAir == 2 and AreaMeso_ALS == 3 and CombClouds == 1: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([1.0e-2,0.74,0.25])))
    if AreaMoDryAir == 3 and AreaMeso_ALS == 3 and CombClouds == 1: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([5.0e-2,0.65,0.3])))
    if AreaMoDryAir == 0 and AreaMeso_ALS == 0 and CombClouds == 2: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.25,0.35,0.4])))
    if AreaMoDryAir == 1 and AreaMeso_ALS == 0 and CombClouds == 2: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.15,0.4,0.45])))
    if AreaMoDryAir == 2 and AreaMeso_ALS == 0 and CombClouds == 2: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.1,0.4,0.5])))
    if AreaMoDryAir == 3 and AreaMeso_ALS == 0 and CombClouds == 2: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.1,0.25,0.65])))
    if AreaMoDryAir == 0 and AreaMeso_ALS == 1 and CombClouds == 2: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([5.0e-2,0.45,0.5])))
    if AreaMoDryAir == 1 and AreaMeso_ALS == 1 and CombClouds == 2: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([1.0e-2,0.3,0.69])))
    if AreaMoDryAir == 2 and AreaMeso_ALS == 1 and CombClouds == 2: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.0,0.2,0.8])))
    if AreaMoDryAir == 3 and AreaMeso_ALS == 1 and CombClouds == 2: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.0,0.15,0.85])))
    if AreaMoDryAir == 0 and AreaMeso_ALS == 2 and CombClouds == 2: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([1.0e-2,0.29,0.7])))
    if AreaMoDryAir == 1 and AreaMeso_ALS == 2 and CombClouds == 2: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.0,0.1,0.9])))
    if AreaMoDryAir == 2 and AreaMeso_ALS == 2 and CombClouds == 2: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.0,5.0e-2,0.95])))
    if AreaMoDryAir == 3 and AreaMeso_ALS == 2 and CombClouds == 2: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.0,4.0e-2,0.96])))
    if AreaMoDryAir == 0 and AreaMeso_ALS == 3 and CombClouds == 2: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.0,0.1,0.9])))
    if AreaMoDryAir == 1 and AreaMeso_ALS == 3 and CombClouds == 2: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.0,2.0e-2,0.98])))
    if AreaMoDryAir == 2 and AreaMeso_ALS == 3 and CombClouds == 2: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.0,1.0e-2,0.99])))
    if AreaMoDryAir == 3 and AreaMeso_ALS == 3 and CombClouds == 2: CldShadeOth = pyro.sample("CldShadeOth", dist.Categorical(probs=torch.tensor([0.0,0.0,1.0])))

    AMInstabMt = pyro.sample("AMInstabMt", dist.Categorical(probs=torch.tensor([0.333333,0.333333,0.333334])))

    if CldShadeOth == 0 and AMInstabMt == 0: InsInMt = pyro.sample("InsInMt", dist.Categorical(probs=torch.tensor([0.9,0.1,0.0])))
    if CldShadeOth == 1 and AMInstabMt == 0: InsInMt = pyro.sample("InsInMt", dist.Categorical(probs=torch.tensor([0.6,0.39,1.0e-2])))
    if CldShadeOth == 2 and AMInstabMt == 0: InsInMt = pyro.sample("InsInMt", dist.Categorical(probs=torch.tensor([0.5,0.35,0.15])))
    if CldShadeOth == 0 and AMInstabMt == 1: InsInMt = pyro.sample("InsInMt", dist.Categorical(probs=torch.tensor([1.0e-2,0.4,0.59])))
    if CldShadeOth == 1 and AMInstabMt == 1: InsInMt = pyro.sample("InsInMt", dist.Categorical(probs=torch.tensor([0.0,0.4,0.6])))
    if CldShadeOth == 2 and AMInstabMt == 1: InsInMt = pyro.sample("InsInMt", dist.Categorical(probs=torch.tensor([0.0,0.15,0.85])))
    if CldShadeOth == 0 and AMInstabMt == 2: InsInMt = pyro.sample("InsInMt", dist.Categorical(probs=torch.tensor([0.0,5.0e-2,0.95])))
    if CldShadeOth == 1 and AMInstabMt == 2: InsInMt = pyro.sample("InsInMt", dist.Categorical(probs=torch.tensor([0.0,0.0,1.0])))
    if CldShadeOth == 2 and AMInstabMt == 2: InsInMt = pyro.sample("InsInMt", dist.Categorical(probs=torch.tensor([0.0,0.0,1.0])))

    WndHodograph = pyro.sample("WndHodograph", dist.Categorical(probs=torch.tensor([0.3,0.25,0.25,0.2])))

    if InsInMt == 0 and WndHodograph == 0: OutflowFrMt = pyro.sample("OutflowFrMt", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0])))
    if InsInMt == 1 and WndHodograph == 0: OutflowFrMt = pyro.sample("OutflowFrMt", dist.Categorical(probs=torch.tensor([0.5,0.4,0.1])))
    if InsInMt == 2 and WndHodograph == 0: OutflowFrMt = pyro.sample("OutflowFrMt", dist.Categorical(probs=torch.tensor([5.0e-2,0.45,0.5])))
    if InsInMt == 0 and WndHodograph == 1: OutflowFrMt = pyro.sample("OutflowFrMt", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0])))
    if InsInMt == 1 and WndHodograph == 1: OutflowFrMt = pyro.sample("OutflowFrMt", dist.Categorical(probs=torch.tensor([0.15,0.4,0.45])))
    if InsInMt == 2 and WndHodograph == 1: OutflowFrMt = pyro.sample("OutflowFrMt", dist.Categorical(probs=torch.tensor([1.0e-2,0.15,0.84])))
    if InsInMt == 0 and WndHodograph == 2: OutflowFrMt = pyro.sample("OutflowFrMt", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0])))
    if InsInMt == 1 and WndHodograph == 2: OutflowFrMt = pyro.sample("OutflowFrMt", dist.Categorical(probs=torch.tensor([0.35,0.6,5.0e-2])))
    if InsInMt == 2 and WndHodograph == 2: OutflowFrMt = pyro.sample("OutflowFrMt", dist.Categorical(probs=torch.tensor([0.1,0.25,0.65])))
    if InsInMt == 0 and WndHodograph == 3: OutflowFrMt = pyro.sample("OutflowFrMt", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0])))
    if InsInMt == 1 and WndHodograph == 3: OutflowFrMt = pyro.sample("OutflowFrMt", dist.Categorical(probs=torch.tensor([0.8,0.19,1.0e-2])))
    if InsInMt == 2 and WndHodograph == 3: OutflowFrMt = pyro.sample("OutflowFrMt", dist.Categorical(probs=torch.tensor([0.6,0.3,0.1])))

    MorningBound = pyro.sample("MorningBound", dist.Categorical(probs=torch.tensor([0.5,0.35,0.15])))

    if OutflowFrMt == 0 and WndHodograph == 0 and MorningBound == 0: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.5,0.48,2.0e-2])))
    if OutflowFrMt == 1 and WndHodograph == 0 and MorningBound == 0: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.3,0.63,7.0e-2])))
    if OutflowFrMt == 2 and WndHodograph == 0 and MorningBound == 0: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.0,0.55,0.45])))
    if OutflowFrMt == 0 and WndHodograph == 1 and MorningBound == 0: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.75,0.22,3.0e-2])))
    if OutflowFrMt == 1 and WndHodograph == 1 and MorningBound == 0: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.15,0.7,0.15])))
    if OutflowFrMt == 2 and WndHodograph == 1 and MorningBound == 0: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.0,0.5,0.5])))
    if OutflowFrMt == 0 and WndHodograph == 2 and MorningBound == 0: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.8,0.18,2.0e-2])))
    if OutflowFrMt == 1 and WndHodograph == 2 and MorningBound == 0: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.15,0.7,0.15])))
    if OutflowFrMt == 2 and WndHodograph == 2 and MorningBound == 0: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.0,0.7,0.3])))
    if OutflowFrMt == 0 and WndHodograph == 3 and MorningBound == 0: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.7,0.28,2.0e-2])))
    if OutflowFrMt == 1 and WndHodograph == 3 and MorningBound == 0: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.4,0.55,5.0e-2])))
    if OutflowFrMt == 2 and WndHodograph == 3 and MorningBound == 0: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([2.0e-2,0.73,0.25])))
    if OutflowFrMt == 0 and WndHodograph == 0 and MorningBound == 1: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.3,0.5,0.2])))
    if OutflowFrMt == 1 and WndHodograph == 0 and MorningBound == 1: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.1,0.5,0.4])))
    if OutflowFrMt == 2 and WndHodograph == 0 and MorningBound == 1: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.0,0.4,0.6])))
    if OutflowFrMt == 0 and WndHodograph == 1 and MorningBound == 1: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.45,0.45,0.1])))
    if OutflowFrMt == 1 and WndHodograph == 1 and MorningBound == 1: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.1,0.75,0.15])))
    if OutflowFrMt == 2 and WndHodograph == 1 and MorningBound == 1: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.0,0.4,0.6])))
    if OutflowFrMt == 0 and WndHodograph == 2 and MorningBound == 1: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.35,0.5,0.15])))
    if OutflowFrMt == 1 and WndHodograph == 2 and MorningBound == 1: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([5.0e-2,0.8,0.15])))
    if OutflowFrMt == 2 and WndHodograph == 2 and MorningBound == 1: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.0,0.5,0.5])))
    if OutflowFrMt == 0 and WndHodograph == 3 and MorningBound == 1: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.25,0.6,0.15])))
    if OutflowFrMt == 1 and WndHodograph == 3 and MorningBound == 1: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.2,0.65,0.15])))
    if OutflowFrMt == 2 and WndHodograph == 3 and MorningBound == 1: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([1.0e-2,0.5,0.49])))
    if OutflowFrMt == 0 and WndHodograph == 0 and MorningBound == 2: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.1,0.25,0.65])))
    if OutflowFrMt == 1 and WndHodograph == 0 and MorningBound == 2: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([5.0e-2,0.2,0.75])))
    if OutflowFrMt == 2 and WndHodograph == 0 and MorningBound == 2: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.0,0.15,0.85])))
    if OutflowFrMt == 0 and WndHodograph == 1 and MorningBound == 2: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.25,0.4,0.35])))
    if OutflowFrMt == 1 and WndHodograph == 1 and MorningBound == 2: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([5.0e-2,0.5,0.45])))
    if OutflowFrMt == 2 and WndHodograph == 1 and MorningBound == 2: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.0,0.2,0.8])))
    if OutflowFrMt == 0 and WndHodograph == 2 and MorningBound == 2: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.25,0.35,0.4])))
    if OutflowFrMt == 1 and WndHodograph == 2 and MorningBound == 2: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([5.0e-2,0.45,0.5])))
    if OutflowFrMt == 2 and WndHodograph == 2 and MorningBound == 2: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([0.0,0.2,0.8])))
    if OutflowFrMt == 0 and WndHodograph == 3 and MorningBound == 2: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([5.0e-2,0.35,0.6])))
    if OutflowFrMt == 1 and WndHodograph == 3 and MorningBound == 2: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([5.0e-2,0.3,0.65])))
    if OutflowFrMt == 2 and WndHodograph == 3 and MorningBound == 2: Boundaries = pyro.sample("Boundaries", dist.Categorical(probs=torch.tensor([1.0e-2,0.2,0.79])))

    if InsInMt == 0 and WndHodograph == 0: CldShadeConv = pyro.sample("CldShadeConv", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0])))
    if InsInMt == 1 and WndHodograph == 0: CldShadeConv = pyro.sample("CldShadeConv", dist.Categorical(probs=torch.tensor([0.3,0.6,0.1])))
    if InsInMt == 2 and WndHodograph == 0: CldShadeConv = pyro.sample("CldShadeConv", dist.Categorical(probs=torch.tensor([0.0,0.3,0.7])))
    if InsInMt == 0 and WndHodograph == 1: CldShadeConv = pyro.sample("CldShadeConv", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0])))
    if InsInMt == 1 and WndHodograph == 1: CldShadeConv = pyro.sample("CldShadeConv", dist.Categorical(probs=torch.tensor([0.2,0.7,0.1])))
    if InsInMt == 2 and WndHodograph == 1: CldShadeConv = pyro.sample("CldShadeConv", dist.Categorical(probs=torch.tensor([0.0,0.2,0.8])))
    if InsInMt == 0 and WndHodograph == 2: CldShadeConv = pyro.sample("CldShadeConv", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0])))
    if InsInMt == 1 and WndHodograph == 2: CldShadeConv = pyro.sample("CldShadeConv", dist.Categorical(probs=torch.tensor([0.5,0.46,4.0e-2])))
    if InsInMt == 2 and WndHodograph == 2: CldShadeConv = pyro.sample("CldShadeConv", dist.Categorical(probs=torch.tensor([0.1,0.5,0.4])))
    if InsInMt == 0 and WndHodograph == 3: CldShadeConv = pyro.sample("CldShadeConv", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0])))
    if InsInMt == 1 and WndHodograph == 3: CldShadeConv = pyro.sample("CldShadeConv", dist.Categorical(probs=torch.tensor([0.8,0.19,1.0e-2])))
    if InsInMt == 2 and WndHodograph == 3: CldShadeConv = pyro.sample("CldShadeConv", dist.Categorical(probs=torch.tensor([0.5,0.38,0.12])))

    if Boundaries == 0 and CldShadeConv == 0 and AreaMeso_ALS == 0 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.4,0.35,0.25])))
    if Boundaries == 1 and CldShadeConv == 0 and AreaMeso_ALS == 0 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.35,0.35,0.3])))
    if Boundaries == 2 and CldShadeConv == 0 and AreaMeso_ALS == 0 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.3,0.3,0.4])))
    if Boundaries == 0 and CldShadeConv == 1 and AreaMeso_ALS == 0 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.4,0.35,0.25])))
    if Boundaries == 1 and CldShadeConv == 1 and AreaMeso_ALS == 0 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.35,0.35,0.3])))
    if Boundaries == 2 and CldShadeConv == 1 and AreaMeso_ALS == 0 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.3,0.3,0.4])))
    if Boundaries == 0 and CldShadeConv == 2 and AreaMeso_ALS == 0 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.45,0.3,0.25])))
    if Boundaries == 1 and CldShadeConv == 2 and AreaMeso_ALS == 0 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.4,0.35,0.25])))
    if Boundaries == 2 and CldShadeConv == 2 and AreaMeso_ALS == 0 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.3,0.35,0.35])))
    if Boundaries == 0 and CldShadeConv == 0 and AreaMeso_ALS == 1 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.6,0.25,0.15])))
    if Boundaries == 1 and CldShadeConv == 0 and AreaMeso_ALS == 1 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.5,0.25,0.25])))
    if Boundaries == 2 and CldShadeConv == 0 and AreaMeso_ALS == 1 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.35,0.25,0.4])))
    if Boundaries == 0 and CldShadeConv == 1 and AreaMeso_ALS == 1 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.65,0.25,0.1])))
    if Boundaries == 1 and CldShadeConv == 1 and AreaMeso_ALS == 1 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.55,0.25,0.2])))
    if Boundaries == 2 and CldShadeConv == 1 and AreaMeso_ALS == 1 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.4,0.25,0.35])))
    if Boundaries == 0 and CldShadeConv == 2 and AreaMeso_ALS == 1 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.7,0.22,8.0e-2])))
    if Boundaries == 1 and CldShadeConv == 2 and AreaMeso_ALS == 1 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.65,0.25,0.1])))
    if Boundaries == 2 and CldShadeConv == 2 and AreaMeso_ALS == 1 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.5,0.25,0.25])))
    if Boundaries == 0 and CldShadeConv == 0 and AreaMeso_ALS == 2 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.6,0.35,5.0e-2])))
    if Boundaries == 1 and CldShadeConv == 0 and AreaMeso_ALS == 2 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.55,0.3,0.15])))
    if Boundaries == 2 and CldShadeConv == 0 and AreaMeso_ALS == 2 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.45,0.3,0.25])))
    if Boundaries == 0 and CldShadeConv == 1 and AreaMeso_ALS == 2 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.65,0.3,5.0e-2])))
    if Boundaries == 1 and CldShadeConv == 1 and AreaMeso_ALS == 2 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.6,0.3,0.1])))
    if Boundaries == 2 and CldShadeConv == 1 and AreaMeso_ALS == 2 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.5,0.3,0.2])))
    if Boundaries == 0 and CldShadeConv == 2 and AreaMeso_ALS == 2 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.7,0.27,3.0e-2])))
    if Boundaries == 1 and CldShadeConv == 2 and AreaMeso_ALS == 2 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.65,0.3,5.0e-2])))
    if Boundaries == 2 and CldShadeConv == 2 and AreaMeso_ALS == 2 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.55,0.35,0.1])))
    if Boundaries == 0 and CldShadeConv == 0 and AreaMeso_ALS == 3 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.7,0.27,3.0e-2])))
    if Boundaries == 1 and CldShadeConv == 0 and AreaMeso_ALS == 3 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.6,0.35,5.0e-2])))
    if Boundaries == 2 and CldShadeConv == 0 and AreaMeso_ALS == 3 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.5,0.35,0.15])))
    if Boundaries == 0 and CldShadeConv == 1 and AreaMeso_ALS == 3 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.75,0.23,2.0e-2])))
    if Boundaries == 1 and CldShadeConv == 1 and AreaMeso_ALS == 3 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.65,0.3,5.0e-2])))
    if Boundaries == 2 and CldShadeConv == 1 and AreaMeso_ALS == 3 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.55,0.35,0.1])))
    if Boundaries == 0 and CldShadeConv == 2 and AreaMeso_ALS == 3 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.85,0.14,1.0e-2])))
    if Boundaries == 1 and CldShadeConv == 2 and AreaMeso_ALS == 3 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.78,0.18,4.0e-2])))
    if Boundaries == 2 and CldShadeConv == 2 and AreaMeso_ALS == 3 and CldShadeOth == 0: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.7,0.24,6.0e-2])))
    if Boundaries == 0 and CldShadeConv == 0 and AreaMeso_ALS == 0 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.1,0.35,0.55])))
    if Boundaries == 1 and CldShadeConv == 0 and AreaMeso_ALS == 0 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([5.0e-2,0.35,0.6])))
    if Boundaries == 2 and CldShadeConv == 0 and AreaMeso_ALS == 0 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([1.0e-2,0.25,0.74])))
    if Boundaries == 0 and CldShadeConv == 1 and AreaMeso_ALS == 0 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.25,0.3,0.45])))
    if Boundaries == 1 and CldShadeConv == 1 and AreaMeso_ALS == 0 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.1,0.35,0.55])))
    if Boundaries == 2 and CldShadeConv == 1 and AreaMeso_ALS == 0 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([5.0e-2,0.6,0.35])))
    if Boundaries == 0 and CldShadeConv == 2 and AreaMeso_ALS == 0 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.4,0.3,0.3])))
    if Boundaries == 1 and CldShadeConv == 2 and AreaMeso_ALS == 0 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.25,0.4,0.35])))
    if Boundaries == 2 and CldShadeConv == 2 and AreaMeso_ALS == 0 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.15,0.35,0.5])))
    if Boundaries == 0 and CldShadeConv == 0 and AreaMeso_ALS == 1 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.4,0.3,0.3])))
    if Boundaries == 1 and CldShadeConv == 0 and AreaMeso_ALS == 1 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.3,0.35,0.35])))
    if Boundaries == 2 and CldShadeConv == 0 and AreaMeso_ALS == 1 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.15,0.4,0.45])))
    if Boundaries == 0 and CldShadeConv == 1 and AreaMeso_ALS == 1 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.45,0.3,0.25])))
    if Boundaries == 1 and CldShadeConv == 1 and AreaMeso_ALS == 1 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.35,0.35,0.3])))
    if Boundaries == 2 and CldShadeConv == 1 and AreaMeso_ALS == 1 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.2,0.4,0.4])))
    if Boundaries == 0 and CldShadeConv == 2 and AreaMeso_ALS == 1 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.55,0.3,0.15])))
    if Boundaries == 1 and CldShadeConv == 2 and AreaMeso_ALS == 1 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.45,0.35,0.2])))
    if Boundaries == 2 and CldShadeConv == 2 and AreaMeso_ALS == 1 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.35,0.35,0.3])))
    if Boundaries == 0 and CldShadeConv == 0 and AreaMeso_ALS == 2 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.45,0.4,0.15])))
    if Boundaries == 1 and CldShadeConv == 0 and AreaMeso_ALS == 2 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.4,0.4,0.2])))
    if Boundaries == 2 and CldShadeConv == 0 and AreaMeso_ALS == 2 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.3,0.4,0.3])))
    if Boundaries == 0 and CldShadeConv == 1 and AreaMeso_ALS == 2 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.5,0.4,0.1])))
    if Boundaries == 1 and CldShadeConv == 1 and AreaMeso_ALS == 2 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.45,0.4,0.15])))
    if Boundaries == 2 and CldShadeConv == 1 and AreaMeso_ALS == 2 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.35,0.4,0.25])))
    if Boundaries == 0 and CldShadeConv == 2 and AreaMeso_ALS == 2 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.6,0.3,0.1])))
    if Boundaries == 1 and CldShadeConv == 2 and AreaMeso_ALS == 2 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.55,0.3,0.15])))
    if Boundaries == 2 and CldShadeConv == 2 and AreaMeso_ALS == 2 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.45,0.35,0.2])))
    if Boundaries == 0 and CldShadeConv == 0 and AreaMeso_ALS == 3 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.65,0.3,5.0e-2])))
    if Boundaries == 1 and CldShadeConv == 0 and AreaMeso_ALS == 3 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.6,0.3,0.1])))
    if Boundaries == 2 and CldShadeConv == 0 and AreaMeso_ALS == 3 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.48,0.32,0.2])))
    if Boundaries == 0 and CldShadeConv == 1 and AreaMeso_ALS == 3 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.7,0.26,4.0e-2])))
    if Boundaries == 1 and CldShadeConv == 1 and AreaMeso_ALS == 3 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.65,0.3,5.0e-2])))
    if Boundaries == 2 and CldShadeConv == 1 and AreaMeso_ALS == 3 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.55,0.3,0.15])))
    if Boundaries == 0 and CldShadeConv == 2 and AreaMeso_ALS == 3 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.8,0.17,3.0e-2])))
    if Boundaries == 1 and CldShadeConv == 2 and AreaMeso_ALS == 3 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.75,0.2,5.0e-2])))
    if Boundaries == 2 and CldShadeConv == 2 and AreaMeso_ALS == 3 and CldShadeOth == 1: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.65,0.28,7.0e-2])))
    if Boundaries == 0 and CldShadeConv == 0 and AreaMeso_ALS == 0 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([5.0e-2,0.3,0.65])))
    if Boundaries == 1 and CldShadeConv == 0 and AreaMeso_ALS == 0 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([3.0e-2,0.25,0.72])))
    if Boundaries == 2 and CldShadeConv == 0 and AreaMeso_ALS == 0 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([1.0e-2,0.2,0.79])))
    if Boundaries == 0 and CldShadeConv == 1 and AreaMeso_ALS == 0 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.15,0.35,0.5])))
    if Boundaries == 1 and CldShadeConv == 1 and AreaMeso_ALS == 0 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([5.0e-2,0.3,0.65])))
    if Boundaries == 2 and CldShadeConv == 1 and AreaMeso_ALS == 0 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([4.0e-2,0.27,0.69])))
    if Boundaries == 0 and CldShadeConv == 2 and AreaMeso_ALS == 0 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.35,0.3,0.35])))
    if Boundaries == 1 and CldShadeConv == 2 and AreaMeso_ALS == 0 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.2,0.4,0.4])))
    if Boundaries == 2 and CldShadeConv == 2 and AreaMeso_ALS == 0 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.13,0.35,0.52])))
    if Boundaries == 0 and CldShadeConv == 0 and AreaMeso_ALS == 1 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.2,0.5,0.3])))
    if Boundaries == 1 and CldShadeConv == 0 and AreaMeso_ALS == 1 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.15,0.45,0.4])))
    if Boundaries == 2 and CldShadeConv == 0 and AreaMeso_ALS == 1 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.1,0.35,0.55])))
    if Boundaries == 0 and CldShadeConv == 1 and AreaMeso_ALS == 1 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.25,0.5,0.25])))
    if Boundaries == 1 and CldShadeConv == 1 and AreaMeso_ALS == 1 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.2,0.5,0.3])))
    if Boundaries == 2 and CldShadeConv == 1 and AreaMeso_ALS == 1 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.12,0.43,0.45])))
    if Boundaries == 0 and CldShadeConv == 2 and AreaMeso_ALS == 1 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.4,0.45,0.15])))
    if Boundaries == 1 and CldShadeConv == 2 and AreaMeso_ALS == 1 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.3,0.5,0.2])))
    if Boundaries == 2 and CldShadeConv == 2 and AreaMeso_ALS == 1 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.2,0.45,0.35])))
    if Boundaries == 0 and CldShadeConv == 0 and AreaMeso_ALS == 2 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.25,0.45,0.3])))
    if Boundaries == 1 and CldShadeConv == 0 and AreaMeso_ALS == 2 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.2,0.4,0.4])))
    if Boundaries == 2 and CldShadeConv == 0 and AreaMeso_ALS == 2 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.15,0.4,0.45])))
    if Boundaries == 0 and CldShadeConv == 1 and AreaMeso_ALS == 2 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.3,0.45,0.25])))
    if Boundaries == 1 and CldShadeConv == 1 and AreaMeso_ALS == 2 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.25,0.5,0.25])))
    if Boundaries == 2 and CldShadeConv == 1 and AreaMeso_ALS == 2 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.2,0.45,0.35])))
    if Boundaries == 0 and CldShadeConv == 2 and AreaMeso_ALS == 2 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.55,0.33,0.12])))
    if Boundaries == 1 and CldShadeConv == 2 and AreaMeso_ALS == 2 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.5,0.3,0.2])))
    if Boundaries == 2 and CldShadeConv == 2 and AreaMeso_ALS == 2 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.4,0.35,0.25])))
    if Boundaries == 0 and CldShadeConv == 0 and AreaMeso_ALS == 3 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.6,0.35,5.0e-2])))
    if Boundaries == 1 and CldShadeConv == 0 and AreaMeso_ALS == 3 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.55,0.33,0.12])))
    if Boundaries == 2 and CldShadeConv == 0 and AreaMeso_ALS == 3 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.45,0.35,0.2])))
    if Boundaries == 0 and CldShadeConv == 1 and AreaMeso_ALS == 3 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.65,0.32,3.0e-2])))
    if Boundaries == 1 and CldShadeConv == 1 and AreaMeso_ALS == 3 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.6,0.35,5.0e-2])))
    if Boundaries == 2 and CldShadeConv == 1 and AreaMeso_ALS == 3 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.5,0.4,0.1])))
    if Boundaries == 0 and CldShadeConv == 2 and AreaMeso_ALS == 3 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.75,0.23,2.0e-2])))
    if Boundaries == 1 and CldShadeConv == 2 and AreaMeso_ALS == 3 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.7,0.25,5.0e-2])))
    if Boundaries == 2 and CldShadeConv == 2 and AreaMeso_ALS == 3 and CldShadeOth == 2: CompPlFcst = pyro.sample("CompPlFcst", dist.Categorical(probs=torch.tensor([0.6,0.3,0.1])))

    if CompPlFcst == 0: CapChange = pyro.sample("CapChange", dist.Categorical(probs=torch.tensor([0.0,0.0,1.0])))
    if CompPlFcst == 1: CapChange = pyro.sample("CapChange", dist.Categorical(probs=torch.tensor([0.0,1.0,0.0])))
    if CompPlFcst == 2: CapChange = pyro.sample("CapChange", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0])))

    LoLevMoistAd = pyro.sample("LoLevMoistAd", dist.Categorical(probs=torch.tensor([0.12,0.28,0.3,0.3])))

    if LoLevMoistAd == 0 and CompPlFcst == 0: InsChange = pyro.sample("InsChange", dist.Categorical(probs=torch.tensor([0.0,5.0e-2,0.95])))
    if LoLevMoistAd == 1 and CompPlFcst == 0: InsChange = pyro.sample("InsChange", dist.Categorical(probs=torch.tensor([5.0e-2,0.15,0.8])))
    if LoLevMoistAd == 2 and CompPlFcst == 0: InsChange = pyro.sample("InsChange", dist.Categorical(probs=torch.tensor([0.15,0.5,0.35])))
    if LoLevMoistAd == 3 and CompPlFcst == 0: InsChange = pyro.sample("InsChange", dist.Categorical(probs=torch.tensor([0.5,0.4,0.1])))
    if LoLevMoistAd == 0 and CompPlFcst == 1: InsChange = pyro.sample("InsChange", dist.Categorical(probs=torch.tensor([0.0,0.12,0.88])))
    if LoLevMoistAd == 1 and CompPlFcst == 1: InsChange = pyro.sample("InsChange", dist.Categorical(probs=torch.tensor([0.1,0.4,0.5])))
    if LoLevMoistAd == 2 and CompPlFcst == 1: InsChange = pyro.sample("InsChange", dist.Categorical(probs=torch.tensor([0.2,0.6,0.2])))
    if LoLevMoistAd == 3 and CompPlFcst == 1: InsChange = pyro.sample("InsChange", dist.Categorical(probs=torch.tensor([0.8,0.16,4.0e-2])))
    if LoLevMoistAd == 0 and CompPlFcst == 2: InsChange = pyro.sample("InsChange", dist.Categorical(probs=torch.tensor([5.0e-2,0.15,0.8])))
    if LoLevMoistAd == 1 and CompPlFcst == 2: InsChange = pyro.sample("InsChange", dist.Categorical(probs=torch.tensor([0.25,0.5,0.25])))
    if LoLevMoistAd == 2 and CompPlFcst == 2: InsChange = pyro.sample("InsChange", dist.Categorical(probs=torch.tensor([0.35,0.5,0.15])))
    if LoLevMoistAd == 3 and CompPlFcst == 2: InsChange = pyro.sample("InsChange", dist.Categorical(probs=torch.tensor([0.9,9.0e-2,1.0e-2])))

    if InsInMt == 0: MountainFcst = pyro.sample("MountainFcst", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0])))
    if InsInMt == 1: MountainFcst = pyro.sample("MountainFcst", dist.Categorical(probs=torch.tensor([0.48,0.5,2.0e-2])))
    if InsInMt == 2: MountainFcst = pyro.sample("MountainFcst", dist.Categorical(probs=torch.tensor([0.2,0.5,0.3])))

    Date = pyro.sample("Date", dist.Categorical(probs=torch.tensor([0.254098,0.131148,0.106557,0.213115,7.377e-2,0.221312])))

    if Date == 0: Scenario = pyro.sample("Scenario", dist.Categorical(probs=torch.tensor([0.1,0.16,0.1,8.0e-2,8.0e-2,1.0e-2,8.0e-2,0.1,9.0e-2,3.0e-2,0.17])))
    if Date == 1: Scenario = pyro.sample("Scenario", dist.Categorical(probs=torch.tensor([5.0e-2,0.16,9.0e-2,9.0e-2,0.12,2.0e-2,0.13,6.0e-2,7.0e-2,0.11,0.1])))
    if Date == 2: Scenario = pyro.sample("Scenario", dist.Categorical(probs=torch.tensor([4.0e-2,0.13,0.1,8.0e-2,0.15,3.0e-2,0.14,4.0e-2,6.0e-2,0.15,8.0e-2])))
    if Date == 3: Scenario = pyro.sample("Scenario", dist.Categorical(probs=torch.tensor([4.0e-2,0.13,9.0e-2,7.0e-2,0.2,8.0e-2,6.0e-2,5.0e-2,7.0e-2,0.13,8.0e-2])))
    if Date == 4: Scenario = pyro.sample("Scenario", dist.Categorical(probs=torch.tensor([4.0e-2,0.11,0.1,7.0e-2,0.17,5.0e-2,0.1,5.0e-2,7.0e-2,0.14,0.1])))
    if Date == 5: Scenario = pyro.sample("Scenario", dist.Categorical(probs=torch.tensor([5.0e-2,0.11,0.1,8.0e-2,0.11,2.0e-2,0.11,6.0e-2,8.0e-2,0.11,0.17])))

    if Scenario == 0: ScenRelAMCIN = pyro.sample("ScenRelAMCIN", dist.Categorical(probs=torch.tensor([1.0,0.0])))
    if Scenario == 1: ScenRelAMCIN = pyro.sample("ScenRelAMCIN", dist.Categorical(probs=torch.tensor([1.0,0.0])))
    if Scenario == 2: ScenRelAMCIN = pyro.sample("ScenRelAMCIN", dist.Categorical(probs=torch.tensor([0.0,1.0])))
    if Scenario == 3: ScenRelAMCIN = pyro.sample("ScenRelAMCIN", dist.Categorical(probs=torch.tensor([0.0,1.0])))
    if Scenario == 4: ScenRelAMCIN = pyro.sample("ScenRelAMCIN", dist.Categorical(probs=torch.tensor([0.0,1.0])))
    if Scenario == 5: ScenRelAMCIN = pyro.sample("ScenRelAMCIN", dist.Categorical(probs=torch.tensor([0.0,1.0])))
    if Scenario == 6: ScenRelAMCIN = pyro.sample("ScenRelAMCIN", dist.Categorical(probs=torch.tensor([0.0,1.0])))
    if Scenario == 7: ScenRelAMCIN = pyro.sample("ScenRelAMCIN", dist.Categorical(probs=torch.tensor([0.0,1.0])))
    if Scenario == 8: ScenRelAMCIN = pyro.sample("ScenRelAMCIN", dist.Categorical(probs=torch.tensor([0.0,1.0])))
    if Scenario == 9: ScenRelAMCIN = pyro.sample("ScenRelAMCIN", dist.Categorical(probs=torch.tensor([0.0,1.0])))
    if Scenario == 10: ScenRelAMCIN = pyro.sample("ScenRelAMCIN", dist.Categorical(probs=torch.tensor([0.0,1.0])))

    MorningCIN = pyro.sample("MorningCIN", dist.Categorical(probs=torch.tensor([0.15,0.57,0.2,8.0e-2])))

    if ScenRelAMCIN == 0 and MorningCIN == 0: AMCINInScen = pyro.sample("AMCINInScen", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0])))
    if ScenRelAMCIN == 1 and MorningCIN == 0: AMCINInScen = pyro.sample("AMCINInScen", dist.Categorical(probs=torch.tensor([0.75,0.25,0.0])))
    if ScenRelAMCIN == 0 and MorningCIN == 1: AMCINInScen = pyro.sample("AMCINInScen", dist.Categorical(probs=torch.tensor([0.6,0.37,3.0e-2])))
    if ScenRelAMCIN == 1 and MorningCIN == 1: AMCINInScen = pyro.sample("AMCINInScen", dist.Categorical(probs=torch.tensor([0.3,0.6,0.1])))
    if ScenRelAMCIN == 0 and MorningCIN == 2: AMCINInScen = pyro.sample("AMCINInScen", dist.Categorical(probs=torch.tensor([0.25,0.45,0.3])))
    if ScenRelAMCIN == 1 and MorningCIN == 2: AMCINInScen = pyro.sample("AMCINInScen", dist.Categorical(probs=torch.tensor([1.0e-2,0.4,0.59])))
    if ScenRelAMCIN == 0 and MorningCIN == 3: AMCINInScen = pyro.sample("AMCINInScen", dist.Categorical(probs=torch.tensor([0.0,0.1,0.9])))
    if ScenRelAMCIN == 1 and MorningCIN == 3: AMCINInScen = pyro.sample("AMCINInScen", dist.Categorical(probs=torch.tensor([0.0,3.0e-2,0.97])))

    if AMCINInScen == 0 and CapChange == 0: CapInScen = pyro.sample("CapInScen", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0])))
    if AMCINInScen == 1 and CapChange == 0: CapInScen = pyro.sample("CapInScen", dist.Categorical(probs=torch.tensor([0.75,0.25,0.0])))
    if AMCINInScen == 2 and CapChange == 0: CapInScen = pyro.sample("CapInScen", dist.Categorical(probs=torch.tensor([0.3,0.35,0.35])))
    if AMCINInScen == 0 and CapChange == 1: CapInScen = pyro.sample("CapInScen", dist.Categorical(probs=torch.tensor([0.98,2.0e-2,0.0])))
    if AMCINInScen == 1 and CapChange == 1: CapInScen = pyro.sample("CapInScen", dist.Categorical(probs=torch.tensor([3.0e-2,0.94,3.0e-2])))
    if AMCINInScen == 2 and CapChange == 1: CapInScen = pyro.sample("CapInScen", dist.Categorical(probs=torch.tensor([0.0,2.0e-2,0.98])))
    if AMCINInScen == 0 and CapChange == 2: CapInScen = pyro.sample("CapInScen", dist.Categorical(probs=torch.tensor([0.35,0.35,0.3])))
    if AMCINInScen == 1 and CapChange == 2: CapInScen = pyro.sample("CapInScen", dist.Categorical(probs=torch.tensor([0.0,0.25,0.75])))
    if AMCINInScen == 2 and CapChange == 2: CapInScen = pyro.sample("CapInScen", dist.Categorical(probs=torch.tensor([0.0,0.0,1.0])))

    if Scenario == 0: ScenRelAMIns = pyro.sample("ScenRelAMIns", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0,0.0,0.0,0.0])))
    if Scenario == 1: ScenRelAMIns = pyro.sample("ScenRelAMIns", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0,0.0,0.0,0.0])))
    if Scenario == 2: ScenRelAMIns = pyro.sample("ScenRelAMIns", dist.Categorical(probs=torch.tensor([0.0,1.0,0.0,0.0,0.0,0.0])))
    if Scenario == 3: ScenRelAMIns = pyro.sample("ScenRelAMIns", dist.Categorical(probs=torch.tensor([0.0,1.0,0.0,0.0,0.0,0.0])))
    if Scenario == 4: ScenRelAMIns = pyro.sample("ScenRelAMIns", dist.Categorical(probs=torch.tensor([0.0,1.0,0.0,0.0,0.0,0.0])))
    if Scenario == 5: ScenRelAMIns = pyro.sample("ScenRelAMIns", dist.Categorical(probs=torch.tensor([0.0,0.0,1.0,0.0,0.0,0.0])))
    if Scenario == 6: ScenRelAMIns = pyro.sample("ScenRelAMIns", dist.Categorical(probs=torch.tensor([0.0,0.0,0.0,1.0,0.0,0.0])))
    if Scenario == 7: ScenRelAMIns = pyro.sample("ScenRelAMIns", dist.Categorical(probs=torch.tensor([0.0,0.0,0.0,0.0,1.0,0.0])))
    if Scenario == 8: ScenRelAMIns = pyro.sample("ScenRelAMIns", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0,0.0,0.0,0.0])))
    if Scenario == 9: ScenRelAMIns = pyro.sample("ScenRelAMIns", dist.Categorical(probs=torch.tensor([0.0,1.0,0.0,0.0,0.0,0.0])))
    if Scenario == 10: ScenRelAMIns = pyro.sample("ScenRelAMIns", dist.Categorical(probs=torch.tensor([0.0,0.0,0.0,0.0,0.0,1.0])))

    LIfr12ZDENSd = pyro.sample("LIfr12ZDENSd", dist.Categorical(probs=torch.tensor([0.1,0.52,0.3,8.0e-2])))

    AMDewptCalPl = pyro.sample("AMDewptCalPl", dist.Categorical(probs=torch.tensor([0.3,0.25,0.45])))

    if ScenRelAMIns == 0 and LIfr12ZDENSd == 0 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.6,0.3,0.1])))
    if ScenRelAMIns == 1 and LIfr12ZDENSd == 0 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.4,0.3,0.3])))
    if ScenRelAMIns == 2 and LIfr12ZDENSd == 0 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.35,0.35,0.3])))
    if ScenRelAMIns == 3 and LIfr12ZDENSd == 0 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.3,0.4,0.3])))
    if ScenRelAMIns == 4 and LIfr12ZDENSd == 0 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.35,0.45,0.2])))
    if ScenRelAMIns == 5 and LIfr12ZDENSd == 0 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.3,0.55,0.15])))
    if ScenRelAMIns == 0 and LIfr12ZDENSd == 1 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.3,0.3,0.4])))
    if ScenRelAMIns == 1 and LIfr12ZDENSd == 1 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.15,0.3,0.55])))
    if ScenRelAMIns == 2 and LIfr12ZDENSd == 1 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([7.0e-2,0.38,0.55])))
    if ScenRelAMIns == 3 and LIfr12ZDENSd == 1 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.15,0.35,0.5])))
    if ScenRelAMIns == 4 and LIfr12ZDENSd == 1 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.1,0.25,0.65])))
    if ScenRelAMIns == 5 and LIfr12ZDENSd == 1 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.1,0.35,0.55])))
    if ScenRelAMIns == 0 and LIfr12ZDENSd == 2 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([6.0e-2,0.21,0.73])))
    if ScenRelAMIns == 1 and LIfr12ZDENSd == 2 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([3.0e-2,0.17,0.8])))
    if ScenRelAMIns == 2 and LIfr12ZDENSd == 2 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.0,5.0e-2,0.95])))
    if ScenRelAMIns == 3 and LIfr12ZDENSd == 2 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([7.0e-2,0.23,0.7])))
    if ScenRelAMIns == 4 and LIfr12ZDENSd == 2 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([2.0e-2,0.18,0.8])))
    if ScenRelAMIns == 5 and LIfr12ZDENSd == 2 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([5.0e-2,0.22,0.73])))
    if ScenRelAMIns == 0 and LIfr12ZDENSd == 3 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([1.0e-2,4.0e-2,0.95])))
    if ScenRelAMIns == 1 and LIfr12ZDENSd == 3 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([1.0e-2,4.0e-2,0.95])))
    if ScenRelAMIns == 2 and LIfr12ZDENSd == 3 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.0,2.0e-2,0.98])))
    if ScenRelAMIns == 3 and LIfr12ZDENSd == 3 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([2.0e-2,0.18,0.8])))
    if ScenRelAMIns == 4 and LIfr12ZDENSd == 3 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([1.0e-2,9.0e-2,0.9])))
    if ScenRelAMIns == 5 and LIfr12ZDENSd == 3 and AMDewptCalPl == 0: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([2.0e-2,0.1,0.88])))
    if ScenRelAMIns == 0 and LIfr12ZDENSd == 0 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.85,0.13,2.0e-2])))
    if ScenRelAMIns == 1 and LIfr12ZDENSd == 0 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.7,0.2,0.1])))
    if ScenRelAMIns == 2 and LIfr12ZDENSd == 0 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.55,0.4,5.0e-2])))
    if ScenRelAMIns == 3 and LIfr12ZDENSd == 0 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.5,0.3,0.2])))
    if ScenRelAMIns == 4 and LIfr12ZDENSd == 0 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.4,0.5,0.1])))
    if ScenRelAMIns == 5 and LIfr12ZDENSd == 0 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.4,0.5,0.1])))
    if ScenRelAMIns == 0 and LIfr12ZDENSd == 1 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.5,0.3,0.2])))
    if ScenRelAMIns == 1 and LIfr12ZDENSd == 1 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.25,0.5,0.25])))
    if ScenRelAMIns == 2 and LIfr12ZDENSd == 1 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.2,0.6,0.2])))
    if ScenRelAMIns == 3 and LIfr12ZDENSd == 1 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.2,0.6,0.2])))
    if ScenRelAMIns == 4 and LIfr12ZDENSd == 1 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.15,0.45,0.4])))
    if ScenRelAMIns == 5 and LIfr12ZDENSd == 1 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.25,0.5,0.25])))
    if ScenRelAMIns == 0 and LIfr12ZDENSd == 2 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.2,0.4,0.4])))
    if ScenRelAMIns == 1 and LIfr12ZDENSd == 2 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.2,0.3,0.5])))
    if ScenRelAMIns == 2 and LIfr12ZDENSd == 2 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([5.0e-2,0.35,0.6])))
    if ScenRelAMIns == 3 and LIfr12ZDENSd == 2 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.13,0.47,0.4])))
    if ScenRelAMIns == 4 and LIfr12ZDENSd == 2 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([5.0e-2,0.25,0.7])))
    if ScenRelAMIns == 5 and LIfr12ZDENSd == 2 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.1,0.35,0.55])))
    if ScenRelAMIns == 0 and LIfr12ZDENSd == 3 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([5.0e-2,0.2,0.75])))
    if ScenRelAMIns == 1 and LIfr12ZDENSd == 3 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([5.0e-2,0.18,0.77])))
    if ScenRelAMIns == 2 and LIfr12ZDENSd == 3 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.0,5.0e-2,0.95])))
    if ScenRelAMIns == 3 and LIfr12ZDENSd == 3 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([4.0e-2,0.26,0.7])))
    if ScenRelAMIns == 4 and LIfr12ZDENSd == 3 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([3.0e-2,0.17,0.8])))
    if ScenRelAMIns == 5 and LIfr12ZDENSd == 3 and AMDewptCalPl == 1: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([4.0e-2,0.16,0.8])))
    if ScenRelAMIns == 0 and LIfr12ZDENSd == 0 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.95,4.0e-2,1.0e-2])))
    if ScenRelAMIns == 1 and LIfr12ZDENSd == 0 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.9,8.0e-2,2.0e-2])))
    if ScenRelAMIns == 2 and LIfr12ZDENSd == 0 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.85,0.13,2.0e-2])))
    if ScenRelAMIns == 3 and LIfr12ZDENSd == 0 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.75,0.2,5.0e-2])))
    if ScenRelAMIns == 4 and LIfr12ZDENSd == 0 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.58,0.4,2.0e-2])))
    if ScenRelAMIns == 5 and LIfr12ZDENSd == 0 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.5,0.43,7.0e-2])))
    if ScenRelAMIns == 0 and LIfr12ZDENSd == 1 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.75,0.2,5.0e-2])))
    if ScenRelAMIns == 1 and LIfr12ZDENSd == 1 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.6,0.3,0.1])))
    if ScenRelAMIns == 2 and LIfr12ZDENSd == 1 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.5,0.43,7.0e-2])))
    if ScenRelAMIns == 3 and LIfr12ZDENSd == 1 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.15,0.7,0.15])))
    if ScenRelAMIns == 4 and LIfr12ZDENSd == 1 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.4,0.45,0.15])))
    if ScenRelAMIns == 5 and LIfr12ZDENSd == 1 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.3,0.5,0.2])))
    if ScenRelAMIns == 0 and LIfr12ZDENSd == 2 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.5,0.4,0.1])))
    if ScenRelAMIns == 1 and LIfr12ZDENSd == 2 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.45,0.4,0.15])))
    if ScenRelAMIns == 2 and LIfr12ZDENSd == 2 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.25,0.5,0.25])))
    if ScenRelAMIns == 3 and LIfr12ZDENSd == 2 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.1,0.75,0.15])))
    if ScenRelAMIns == 4 and LIfr12ZDENSd == 2 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.15,0.35,0.5])))
    if ScenRelAMIns == 5 and LIfr12ZDENSd == 2 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.15,0.35,0.5])))
    if ScenRelAMIns == 0 and LIfr12ZDENSd == 3 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.35,0.35,0.3])))
    if ScenRelAMIns == 1 and LIfr12ZDENSd == 3 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.25,0.4,0.35])))
    if ScenRelAMIns == 2 and LIfr12ZDENSd == 3 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([4.0e-2,0.16,0.8])))
    if ScenRelAMIns == 3 and LIfr12ZDENSd == 3 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([7.0e-2,0.3,0.63])))
    if ScenRelAMIns == 4 and LIfr12ZDENSd == 3 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([8.0e-2,0.32,0.6])))
    if ScenRelAMIns == 5 and LIfr12ZDENSd == 3 and AMDewptCalPl == 2: AMInsWliScen = pyro.sample("AMInsWliScen", dist.Categorical(probs=torch.tensor([0.1,0.25,0.65])))

    if AMInsWliScen == 0 and InsChange == 0: InsSclInScen = pyro.sample("InsSclInScen", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0])))
    if AMInsWliScen == 1 and InsChange == 0: InsSclInScen = pyro.sample("InsSclInScen", dist.Categorical(probs=torch.tensor([0.6,0.4,0.0])))
    if AMInsWliScen == 2 and InsChange == 0: InsSclInScen = pyro.sample("InsSclInScen", dist.Categorical(probs=torch.tensor([0.25,0.35,0.4])))
    if AMInsWliScen == 0 and InsChange == 1: InsSclInScen = pyro.sample("InsSclInScen", dist.Categorical(probs=torch.tensor([0.9,0.1,0.0])))
    if AMInsWliScen == 1 and InsChange == 1: InsSclInScen = pyro.sample("InsSclInScen", dist.Categorical(probs=torch.tensor([0.15,0.7,0.15])))
    if AMInsWliScen == 2 and InsChange == 1: InsSclInScen = pyro.sample("InsSclInScen", dist.Categorical(probs=torch.tensor([0.0,0.1,0.9])))
    if AMInsWliScen == 0 and InsChange == 2: InsSclInScen = pyro.sample("InsSclInScen", dist.Categorical(probs=torch.tensor([0.4,0.35,0.25])))
    if AMInsWliScen == 1 and InsChange == 2: InsSclInScen = pyro.sample("InsSclInScen", dist.Categorical(probs=torch.tensor([0.0,0.4,0.6])))
    if AMInsWliScen == 2 and InsChange == 2: InsSclInScen = pyro.sample("InsSclInScen", dist.Categorical(probs=torch.tensor([0.0,0.0,1.0])))

    if Scenario == 0: ScenRel3_4 = pyro.sample("ScenRel3_4", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0,0.0,0.0])))
    if Scenario == 1: ScenRel3_4 = pyro.sample("ScenRel3_4", dist.Categorical(probs=torch.tensor([0.0,1.0,0.0,0.0,0.0])))
    if Scenario == 2: ScenRel3_4 = pyro.sample("ScenRel3_4", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0,0.0,0.0])))
    if Scenario == 3: ScenRel3_4 = pyro.sample("ScenRel3_4", dist.Categorical(probs=torch.tensor([0.0,0.0,1.0,0.0,0.0])))
    if Scenario == 4: ScenRel3_4 = pyro.sample("ScenRel3_4", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0,0.0,0.0])))
    if Scenario == 5: ScenRel3_4 = pyro.sample("ScenRel3_4", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0,0.0,0.0])))
    if Scenario == 6: ScenRel3_4 = pyro.sample("ScenRel3_4", dist.Categorical(probs=torch.tensor([0.0,0.0,0.0,1.0,0.0])))
    if Scenario == 7: ScenRel3_4 = pyro.sample("ScenRel3_4", dist.Categorical(probs=torch.tensor([0.0,0.0,0.0,0.0,1.0])))
    if Scenario == 8: ScenRel3_4 = pyro.sample("ScenRel3_4", dist.Categorical(probs=torch.tensor([0.0,0.0,0.0,0.0,1.0])))
    if Scenario == 9: ScenRel3_4 = pyro.sample("ScenRel3_4", dist.Categorical(probs=torch.tensor([0.0,0.0,0.0,1.0,0.0])))
    if Scenario == 10: ScenRel3_4 = pyro.sample("ScenRel3_4", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0,0.0,0.0])))

    LatestCIN = pyro.sample("LatestCIN", dist.Categorical(probs=torch.tensor([0.4,0.4,0.15,5.0e-2])))

    LLIW = pyro.sample("LLIW", dist.Categorical(probs=torch.tensor([0.12,0.32,0.38,0.18])))

    if LatestCIN == 0 and LLIW == 0: CurPropConv = pyro.sample("CurPropConv", dist.Categorical(probs=torch.tensor([0.7,0.28,2.0e-2,0.0])))
    if LatestCIN == 1 and LLIW == 0: CurPropConv = pyro.sample("CurPropConv", dist.Categorical(probs=torch.tensor([0.9,9.0e-2,1.0e-2,0.0])))
    if LatestCIN == 2 and LLIW == 0: CurPropConv = pyro.sample("CurPropConv", dist.Categorical(probs=torch.tensor([0.95,5.0e-2,0.0,0.0])))
    if LatestCIN == 3 and LLIW == 0: CurPropConv = pyro.sample("CurPropConv", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0,0.0])))
    if LatestCIN == 0 and LLIW == 1: CurPropConv = pyro.sample("CurPropConv", dist.Categorical(probs=torch.tensor([0.1,0.5,0.3,0.1])))
    if LatestCIN == 1 and LLIW == 1: CurPropConv = pyro.sample("CurPropConv", dist.Categorical(probs=torch.tensor([0.65,0.25,9.0e-2,1.0e-2])))
    if LatestCIN == 2 and LLIW == 1: CurPropConv = pyro.sample("CurPropConv", dist.Categorical(probs=torch.tensor([0.75,0.23,2.0e-2,0.0])))
    if LatestCIN == 3 and LLIW == 1: CurPropConv = pyro.sample("CurPropConv", dist.Categorical(probs=torch.tensor([0.95,5.0e-2,0.0,0.0])))
    if LatestCIN == 0 and LLIW == 2: CurPropConv = pyro.sample("CurPropConv", dist.Categorical(probs=torch.tensor([1.0e-2,0.14,0.35,0.5])))
    if LatestCIN == 1 and LLIW == 2: CurPropConv = pyro.sample("CurPropConv", dist.Categorical(probs=torch.tensor([0.25,0.35,0.3,0.1])))
    if LatestCIN == 2 and LLIW == 2: CurPropConv = pyro.sample("CurPropConv", dist.Categorical(probs=torch.tensor([0.4,0.4,0.18,2.0e-2])))
    if LatestCIN == 3 and LLIW == 2: CurPropConv = pyro.sample("CurPropConv", dist.Categorical(probs=torch.tensor([0.75,0.2,5.0e-2,0.0])))
    if LatestCIN == 0 and LLIW == 3: CurPropConv = pyro.sample("CurPropConv", dist.Categorical(probs=torch.tensor([0.0,2.0e-2,0.18,0.8])))
    if LatestCIN == 1 and LLIW == 3: CurPropConv = pyro.sample("CurPropConv", dist.Categorical(probs=torch.tensor([1.0e-2,0.15,0.33,0.51])))
    if LatestCIN == 2 and LLIW == 3: CurPropConv = pyro.sample("CurPropConv", dist.Categorical(probs=torch.tensor([0.2,0.3,0.35,0.15])))
    if LatestCIN == 3 and LLIW == 3: CurPropConv = pyro.sample("CurPropConv", dist.Categorical(probs=torch.tensor([0.5,0.35,0.1,5.0e-2])))

    if Scenario == 0: ScnRelPlFcst = pyro.sample("ScnRelPlFcst", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0])))
    if Scenario == 1: ScnRelPlFcst = pyro.sample("ScnRelPlFcst", dist.Categorical(probs=torch.tensor([0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0])))
    if Scenario == 2: ScnRelPlFcst = pyro.sample("ScnRelPlFcst", dist.Categorical(probs=torch.tensor([0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0])))
    if Scenario == 3: ScnRelPlFcst = pyro.sample("ScnRelPlFcst", dist.Categorical(probs=torch.tensor([0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0])))
    if Scenario == 4: ScnRelPlFcst = pyro.sample("ScnRelPlFcst", dist.Categorical(probs=torch.tensor([0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0])))
    if Scenario == 5: ScnRelPlFcst = pyro.sample("ScnRelPlFcst", dist.Categorical(probs=torch.tensor([0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0])))
    if Scenario == 6: ScnRelPlFcst = pyro.sample("ScnRelPlFcst", dist.Categorical(probs=torch.tensor([0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0])))
    if Scenario == 7: ScnRelPlFcst = pyro.sample("ScnRelPlFcst", dist.Categorical(probs=torch.tensor([0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0])))
    if Scenario == 8: ScnRelPlFcst = pyro.sample("ScnRelPlFcst", dist.Categorical(probs=torch.tensor([0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0])))
    if Scenario == 9: ScnRelPlFcst = pyro.sample("ScnRelPlFcst", dist.Categorical(probs=torch.tensor([0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0])))
    if Scenario == 10: ScnRelPlFcst = pyro.sample("ScnRelPlFcst", dist.Categorical(probs=torch.tensor([0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0])))

    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.2,5.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.7,0.25,5.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.5,0.4,0.1])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.4,0.45,0.15])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.5,0.3,0.2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.3,0.4,0.3])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.2,0.45,0.35])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.16,0.47,0.37])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.2,0.45])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.3,0.25,0.45])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.25,0.28,0.47])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.18,0.3,0.52])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.2,5.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.65,0.25,0.1])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.45,0.35,0.2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.4,0.25])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.3,0.35])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.28,0.37,0.35])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.23,0.4,0.37])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.18,0.45,0.37])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.25,0.15,0.6])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.22,0.17,0.61])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.19,0.18,0.63])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.15,0.2,0.65])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.2,5.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.3,0.1])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.4,0.25])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.2,0.45,0.35])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.5,0.2,0.3])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.4,0.28,0.32])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.3,0.34,0.36])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.23,0.4,0.37])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.4,8.0e-2,0.52])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.27,0.1,0.63])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.15,0.16,0.69])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 0: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.1,0.2,0.7])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.2,5.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.33,7.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.45,0.42,0.13])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.45,0.2])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.3,0.1])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.55,0.34,0.11])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.4,0.4,0.2])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.3,0.45,0.25])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.45,0.35,0.2])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.4,0.36,0.24])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.3,0.38,0.32])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.2,0.4,0.4])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.65,0.3,5.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.58,0.32,0.1])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.45,0.35,0.2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.4,0.25])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.55,0.3,0.15])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.48,0.35,0.17])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.38,0.35,0.27])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.3,0.35,0.35])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.45,0.35,0.2])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.37,0.28])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.25,0.4,0.35])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.18,0.4,0.42])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.2,5.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.65,0.28,7.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.45,0.4,0.15])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.3,0.45,0.25])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.25,0.15])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.5,0.25,0.25])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.35,0.3])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.25,0.4,0.35])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.45,0.25,0.3])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.3,0.35])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.25,0.3,0.45])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 1: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.2,0.3,0.5])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.9,8.0e-2,2.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.82,0.13,5.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.18,7.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.27,0.13])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.8,0.14,6.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.7,0.2,0.1])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.7,0.2,0.1])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.45,0.32,0.23])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.8,0.1,0.1])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.65,0.2,0.15])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.45,0.3,0.25])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.3,0.3,0.4])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.9,8.0e-2,2.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.8,0.15,5.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.7,0.2,0.1])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.55,0.3,0.15])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.82,0.13,5.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.7,0.2,0.1])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.58,0.25,0.17])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.45,0.3,0.25])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.65,0.2,0.15])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.45,0.3,0.25])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.3,0.35])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.25,0.35,0.4])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.95,4.0e-2,1.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.9,8.0e-2,2.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.19,6.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.55,0.3,0.15])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,0.1,5.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.72,0.18,0.1])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.55,0.25,0.2])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.4,0.3,0.3])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.1,0.15])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.55,0.22,0.23])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.4,0.3,0.3])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 2: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.2,0.4,0.4])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.9,6.0e-2,4.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,0.1,5.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.15,0.1])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.22,0.18])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,9.0e-2,6.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.15,0.1])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.65,0.22,0.13])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.52,0.26,0.22])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.72,0.14,0.14])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.2,0.2])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.5,0.25,0.25])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.4,0.3,0.3])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.91,5.0e-2,4.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,0.1,5.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.72,0.17,0.11])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.55,0.27,0.18])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.82,0.1,8.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.7,0.17,0.13])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.55,0.25,0.2])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.45,0.3,0.25])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.55,0.2,0.25])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.45,0.25,0.3])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.3,0.35])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.25,0.35,0.4])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.93,4.0e-2,3.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,0.1,5.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.7,0.2,0.1])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.5,0.3,0.2])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,7.0e-2,8.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.65,0.2,0.15])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.5,0.27,0.23])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.4,0.3,0.3])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.65,0.15,0.2])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.45,0.25,0.3])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.3,0.3,0.4])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 3: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.23,0.3,0.47])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.88,0.1,2.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.82,0.15,3.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.72,0.22,6.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.55,0.32,0.13])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,0.1,5.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.62,0.28,0.1])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.5,0.34,0.16])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.45,0.2])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.78,0.15,7.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.28,0.12])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.4,0.35,0.25])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.25,0.48,0.27])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,0.13,2.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.8,0.16,4.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.7,0.22,8.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.5,0.35,0.15])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.18,7.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.29,0.11])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.53,0.32,0.15])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.43,0.22])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.55,0.25,0.2])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.48,0.29,0.23])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.35,0.3])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.25,0.42,0.33])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.92,6.0e-2,2.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.82,0.13,5.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.3,0.1])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.45,0.38,0.17])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.15,0.1])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.55,0.3,0.15])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.4,0.38,0.22])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.3,0.45,0.25])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.52,0.25,0.23])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.42,0.3,0.28])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.25,0.4,0.35])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 4: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.15,0.45,0.4])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.92,8.0e-2,0.0])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,0.14,1.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.78,0.21,1.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.69,0.29,2.0e-2])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.88,0.11,1.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,0.14,1.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.74,0.24,2.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.65,0.32,3.0e-2])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.86,0.12,2.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.83,0.14,3.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.72,0.24,4.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.63,0.32,5.0e-2])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.9,0.1,0.0])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.83,0.16,1.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.24,1.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.65,0.33,2.0e-2])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.88,0.11,1.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.82,0.16,2.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.73,0.25,2.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.62,0.35,3.0e-2])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.81,0.17,2.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.72,0.25,3.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.65,0.3,5.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.58,0.36,6.0e-2])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.87,0.13,0.0])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.8,0.19,1.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.72,0.27,1.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.38,2.0e-2])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,0.14,1.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.78,0.2,2.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.7,0.28,2.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.57,0.4,3.0e-2])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.82,0.16,2.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.74,0.22,4.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.34,6.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 5: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.5,0.42,8.0e-2])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,0.13,2.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.8,0.17,3.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.66,0.27,7.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.54,0.36,0.1])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.8,0.17,3.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.2,5.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.3,0.1])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.48,0.39,0.13])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.65,0.25,0.1])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.45,0.4,0.15])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.25,0.57,0.18])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.15,0.63,0.22])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.84,0.12,4.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.77,0.17,6.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.62,0.3,8.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.38,0.5,0.12])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.2,5.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.63,0.3,7.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.53,0.12])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.2,0.65,0.15])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.28,0.12])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.43,0.4,0.17])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.22,0.58,0.2])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.13,0.62,0.25])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.9,6.0e-2,4.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.8,0.13,7.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.3,0.1])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.28,0.57,0.15])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.2,5.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.55,0.35,0.1])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.5,0.15])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.15,0.65,0.2])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.65,0.27,8.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.45,0.4,0.15])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.18,0.62,0.2])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 6: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.1,0.65,0.25])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.97,2.0e-2,1.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.88,0.1,2.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.2,5.0e-2])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.92,6.0e-2,2.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.82,0.14,4.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.67,0.24,9.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.58,0.3,0.12])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,0.1,5.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.7,0.18,0.12])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.57,0.28,0.15])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.4,0.38,0.22])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.99,1.0e-2,0.0])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.93,6.0e-2,1.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,0.12,3.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.7,0.24,6.0e-2])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.9,7.0e-2,3.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.8,0.15,5.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.65,0.24,0.11])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.52,0.33,0.15])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.8,0.13,7.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.68,0.2,0.12])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.45,0.35,0.2])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.3,0.45,0.25])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.98,2.0e-2,0.0])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.91,8.0e-2,1.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.8,0.16,4.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.65,0.28,7.0e-2])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.94,5.0e-2,1.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,0.12,3.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.25,0.15])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.5,0.33,0.17])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,9.0e-2,6.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.77,0.13,0.1])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.47,0.3,0.23])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 7: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.28,0.4,0.32])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.9,8.0e-2,2.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.88,0.1,2.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.7,0.22,8.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.55,0.3,0.15])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.8,0.12,8.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.25,0.15])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.4,0.25])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.25,0.45,0.3])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.65,0.2,0.15])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.55,0.25,0.2])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.25,0.35,0.4])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.2,0.37,0.43])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.88,0.1,2.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,0.12,3.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.15,0.1])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.65,0.2,0.15])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.7,0.2,0.1])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.5,0.3,0.2])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.3,0.4,0.3])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.23,0.42,0.35])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.2,0.2])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.3,0.35])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.25,0.34,0.41])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.22,0.35,0.43])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.92,6.0e-2,2.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,0.12,3.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.17,8.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.63,0.25,0.12])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.65,0.22,0.13])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.45,0.3,0.25])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.35,0.3])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.25,0.36,0.39])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.5,0.2,0.3])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.3,0.25,0.45])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.25,0.3,0.45])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 8: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.2,0.32,0.48])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.9,8.0e-2,2.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.86,0.1,4.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.78,0.16,6.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.7,0.22,8.0e-2])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.22,3.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.68,0.22,0.1])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.25,0.15])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.5,0.28,0.22])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.72,0.2,8.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.25,0.15])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.48,0.26,0.26])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.3,0.35,0.35])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.92,6.0e-2,2.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,0.1,5.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.76,0.17,7.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.67,0.23,0.1])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.8,0.15,5.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.7,0.2,0.1])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.24,0.16])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.47,0.3,0.23])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.15,0.1])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.2,0.2])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.48,0.26,0.26])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.35,0.32,0.33])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.95,4.0e-2,1.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.9,8.0e-2,2.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.2,5.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.62,0.28,0.1])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.83,0.1,7.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.73,0.15,0.12])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.62,0.22,0.16])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.5,0.28,0.22])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.77,0.1,0.13])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.68,0.15,0.17])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.5,0.22,0.28])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 9: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.3,0.28,0.42])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.95,4.0e-2,1.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.88,0.1,2.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.8,0.16,4.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 0 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.7,0.25,5.0e-2])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.9,8.0e-2,2.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.82,0.15,3.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.2,5.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 0 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.65,0.27,8.0e-2])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,0.1,5.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.72,0.2,8.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.6,0.26,0.14])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 0 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.5,0.32,0.18])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.96,3.0e-2,1.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.9,8.0e-2,2.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.8,0.16,4.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 1 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.7,0.25,5.0e-2])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.9,8.0e-2,2.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.8,0.16,4.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.68,0.24,8.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 1 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.55,0.3,0.15])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.88,8.0e-2,4.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.74,0.16,0.1])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.58,0.25,0.17])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 1 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.5,0.3,0.2])))
    if CurPropConv == 0 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.97,2.0e-2,1.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.93,6.0e-2,1.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.88,0.1,2.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 0 and CapInScen == 2 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.8,0.17,3.0e-2])))
    if CurPropConv == 0 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.93,6.0e-2,1.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.85,0.12,3.0e-2])))
    if CurPropConv == 2 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.7,0.22,8.0e-2])))
    if CurPropConv == 3 and InsSclInScen == 1 and CapInScen == 2 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.55,0.3,0.15])))
    if CurPropConv == 0 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.9,7.0e-2,3.0e-2])))
    if CurPropConv == 1 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.75,0.15,0.1])))
    if CurPropConv == 2 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.5,0.27,0.23])))
    if CurPropConv == 3 and InsSclInScen == 2 and CapInScen == 2 and ScnRelPlFcst == 10: PlainsFcst = pyro.sample("PlainsFcst", dist.Categorical(probs=torch.tensor([0.38,0.32,0.3])))

    if ScenRel3_4 == 0 and PlainsFcst == 0: N34StarFcst = pyro.sample("N34StarFcst", dist.Categorical(probs=torch.tensor([0.94,5.0e-2,1.0e-2])))
    if ScenRel3_4 == 1 and PlainsFcst == 0: N34StarFcst = pyro.sample("N34StarFcst", dist.Categorical(probs=torch.tensor([0.98,2.0e-2,0.0])))
    if ScenRel3_4 == 2 and PlainsFcst == 0: N34StarFcst = pyro.sample("N34StarFcst", dist.Categorical(probs=torch.tensor([0.92,6.0e-2,2.0e-2])))
    if ScenRel3_4 == 3 and PlainsFcst == 0: N34StarFcst = pyro.sample("N34StarFcst", dist.Categorical(probs=torch.tensor([0.92,6.0e-2,2.0e-2])))
    if ScenRel3_4 == 4 and PlainsFcst == 0: N34StarFcst = pyro.sample("N34StarFcst", dist.Categorical(probs=torch.tensor([0.99,1.0e-2,0.0])))
    if ScenRel3_4 == 0 and PlainsFcst == 1: N34StarFcst = pyro.sample("N34StarFcst", dist.Categorical(probs=torch.tensor([6.0e-2,0.89,5.0e-2])))
    if ScenRel3_4 == 1 and PlainsFcst == 1: N34StarFcst = pyro.sample("N34StarFcst", dist.Categorical(probs=torch.tensor([4.0e-2,0.94,2.0e-2])))
    if ScenRel3_4 == 2 and PlainsFcst == 1: N34StarFcst = pyro.sample("N34StarFcst", dist.Categorical(probs=torch.tensor([1.0e-2,0.89,0.1])))
    if ScenRel3_4 == 3 and PlainsFcst == 1: N34StarFcst = pyro.sample("N34StarFcst", dist.Categorical(probs=torch.tensor([3.0e-2,0.92,5.0e-2])))
    if ScenRel3_4 == 4 and PlainsFcst == 1: N34StarFcst = pyro.sample("N34StarFcst", dist.Categorical(probs=torch.tensor([9.0e-2,0.9,1.0e-2])))
    if ScenRel3_4 == 0 and PlainsFcst == 2: N34StarFcst = pyro.sample("N34StarFcst", dist.Categorical(probs=torch.tensor([1.0e-2,5.0e-2,0.94])))
    if ScenRel3_4 == 1 and PlainsFcst == 2: N34StarFcst = pyro.sample("N34StarFcst", dist.Categorical(probs=torch.tensor([0.0,3.0e-2,0.97])))
    if ScenRel3_4 == 2 and PlainsFcst == 2: N34StarFcst = pyro.sample("N34StarFcst", dist.Categorical(probs=torch.tensor([0.0,1.0e-2,0.99])))
    if ScenRel3_4 == 3 and PlainsFcst == 2: N34StarFcst = pyro.sample("N34StarFcst", dist.Categorical(probs=torch.tensor([1.0e-2,4.0e-2,0.95])))
    if ScenRel3_4 == 4 and PlainsFcst == 2: N34StarFcst = pyro.sample("N34StarFcst", dist.Categorical(probs=torch.tensor([3.0e-2,0.12,0.85])))

    if MountainFcst == 0 and N34StarFcst == 0: R5Fcst = pyro.sample("R5Fcst", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0])))
    if MountainFcst == 1 and N34StarFcst == 0: R5Fcst = pyro.sample("R5Fcst", dist.Categorical(probs=torch.tensor([0.0,1.0,0.0])))
    if MountainFcst == 2 and N34StarFcst == 0: R5Fcst = pyro.sample("R5Fcst", dist.Categorical(probs=torch.tensor([0.0,0.0,1.0])))
    if MountainFcst == 0 and N34StarFcst == 1: R5Fcst = pyro.sample("R5Fcst", dist.Categorical(probs=torch.tensor([0.0,1.0,0.0])))
    if MountainFcst == 1 and N34StarFcst == 1: R5Fcst = pyro.sample("R5Fcst", dist.Categorical(probs=torch.tensor([0.0,1.0,0.0])))
    if MountainFcst == 2 and N34StarFcst == 1: R5Fcst = pyro.sample("R5Fcst", dist.Categorical(probs=torch.tensor([0.0,0.0,1.0])))
    if MountainFcst == 0 and N34StarFcst == 2: R5Fcst = pyro.sample("R5Fcst", dist.Categorical(probs=torch.tensor([0.0,0.0,1.0])))
    if MountainFcst == 1 and N34StarFcst == 2: R5Fcst = pyro.sample("R5Fcst", dist.Categorical(probs=torch.tensor([0.0,0.0,1.0])))
    if MountainFcst == 2 and N34StarFcst == 2: R5Fcst = pyro.sample("R5Fcst", dist.Categorical(probs=torch.tensor([0.0,0.0,1.0])))

    if Scenario == 0: Dewpoints = pyro.sample("Dewpoints", dist.Categorical(probs=torch.tensor([4.0e-2,5.0e-2,0.15,5.0e-2,0.19,0.3,0.22])))
    if Scenario == 1: Dewpoints = pyro.sample("Dewpoints", dist.Categorical(probs=torch.tensor([5.0e-2,7.0e-2,0.15,0.1,0.3,0.27,6.0e-2])))
    if Scenario == 2: Dewpoints = pyro.sample("Dewpoints", dist.Categorical(probs=torch.tensor([0.4,0.25,0.0,0.15,5.0e-2,2.0e-2,0.13])))
    if Scenario == 3: Dewpoints = pyro.sample("Dewpoints", dist.Categorical(probs=torch.tensor([0.13,0.22,0.18,7.0e-2,0.34,3.0e-2,3.0e-2])))
    if Scenario == 4: Dewpoints = pyro.sample("Dewpoints", dist.Categorical(probs=torch.tensor([0.15,0.2,0.2,0.18,0.11,0.11,5.0e-2])))
    if Scenario == 5: Dewpoints = pyro.sample("Dewpoints", dist.Categorical(probs=torch.tensor([0.0,0.0,0.0,0.0,0.0,0.98,2.0e-2])))
    if Scenario == 6: Dewpoints = pyro.sample("Dewpoints", dist.Categorical(probs=torch.tensor([0.5,0.27,0.15,2.0e-2,2.0e-2,0.0,4.0e-2])))
    if Scenario == 7: Dewpoints = pyro.sample("Dewpoints", dist.Categorical(probs=torch.tensor([0.0,2.0e-2,0.1,5.0e-2,0.5,0.2,0.13])))
    if Scenario == 8: Dewpoints = pyro.sample("Dewpoints", dist.Categorical(probs=torch.tensor([0.0,2.0e-2,0.7,0.0,0.2,4.0e-2,4.0e-2])))
    if Scenario == 9: Dewpoints = pyro.sample("Dewpoints", dist.Categorical(probs=torch.tensor([0.1,0.45,0.1,5.0e-2,0.26,2.0e-2,2.0e-2])))
    if Scenario == 10: Dewpoints = pyro.sample("Dewpoints", dist.Categorical(probs=torch.tensor([0.1,0.1,0.1,0.2,5.0e-2,0.1,0.35])))

    if Scenario == 0: LowLLapse = pyro.sample("LowLLapse", dist.Categorical(probs=torch.tensor([4.0e-2,0.25,0.35,0.36])))
    if Scenario == 1: LowLLapse = pyro.sample("LowLLapse", dist.Categorical(probs=torch.tensor([7.0e-2,0.31,0.31,0.31])))
    if Scenario == 2: LowLLapse = pyro.sample("LowLLapse", dist.Categorical(probs=torch.tensor([0.35,0.47,0.14,4.0e-2])))
    if Scenario == 3: LowLLapse = pyro.sample("LowLLapse", dist.Categorical(probs=torch.tensor([0.4,0.4,0.13,7.0e-2])))
    if Scenario == 4: LowLLapse = pyro.sample("LowLLapse", dist.Categorical(probs=torch.tensor([0.45,0.35,0.15,5.0e-2])))
    if Scenario == 5: LowLLapse = pyro.sample("LowLLapse", dist.Categorical(probs=torch.tensor([1.0e-2,0.35,0.45,0.19])))
    if Scenario == 6: LowLLapse = pyro.sample("LowLLapse", dist.Categorical(probs=torch.tensor([0.78,0.19,3.0e-2,0.0])))
    if Scenario == 7: LowLLapse = pyro.sample("LowLLapse", dist.Categorical(probs=torch.tensor([0.0,2.0e-2,0.33,0.65])))
    if Scenario == 8: LowLLapse = pyro.sample("LowLLapse", dist.Categorical(probs=torch.tensor([0.22,0.4,0.3,8.0e-2])))
    if Scenario == 9: LowLLapse = pyro.sample("LowLLapse", dist.Categorical(probs=torch.tensor([0.13,0.4,0.35,0.12])))
    if Scenario == 10: LowLLapse = pyro.sample("LowLLapse", dist.Categorical(probs=torch.tensor([9.0e-2,0.4,0.33,0.18])))

    if Scenario == 0: MeanRH = pyro.sample("MeanRH", dist.Categorical(probs=torch.tensor([0.33,0.5,0.17])))
    if Scenario == 1: MeanRH = pyro.sample("MeanRH", dist.Categorical(probs=torch.tensor([0.4,0.4,0.2])))
    if Scenario == 2: MeanRH = pyro.sample("MeanRH", dist.Categorical(probs=torch.tensor([5.0e-2,0.45,0.5])))
    if Scenario == 3: MeanRH = pyro.sample("MeanRH", dist.Categorical(probs=torch.tensor([0.1,0.5,0.4])))
    if Scenario == 4: MeanRH = pyro.sample("MeanRH", dist.Categorical(probs=torch.tensor([5.0e-2,0.65,0.3])))
    if Scenario == 5: MeanRH = pyro.sample("MeanRH", dist.Categorical(probs=torch.tensor([1.0,0.0,0.0])))
    if Scenario == 6: MeanRH = pyro.sample("MeanRH", dist.Categorical(probs=torch.tensor([0.0,7.0e-2,0.93])))
    if Scenario == 7: MeanRH = pyro.sample("MeanRH", dist.Categorical(probs=torch.tensor([0.4,0.55,5.0e-2])))
    if Scenario == 8: MeanRH = pyro.sample("MeanRH", dist.Categorical(probs=torch.tensor([0.2,0.45,0.35])))
    if Scenario == 9: MeanRH = pyro.sample("MeanRH", dist.Categorical(probs=torch.tensor([5.0e-2,0.55,0.4])))
    if Scenario == 10: MeanRH = pyro.sample("MeanRH", dist.Categorical(probs=torch.tensor([0.2,0.4,0.4])))

    if Scenario == 0: MidLLapse = pyro.sample("MidLLapse", dist.Categorical(probs=torch.tensor([0.25,0.55,0.2])))
    if Scenario == 1: MidLLapse = pyro.sample("MidLLapse", dist.Categorical(probs=torch.tensor([0.25,0.5,0.25])))
    if Scenario == 2: MidLLapse = pyro.sample("MidLLapse", dist.Categorical(probs=torch.tensor([0.4,0.38,0.22])))
    if Scenario == 3: MidLLapse = pyro.sample("MidLLapse", dist.Categorical(probs=torch.tensor([0.43,0.37,0.2])))
    if Scenario == 4: MidLLapse = pyro.sample("MidLLapse", dist.Categorical(probs=torch.tensor([2.0e-2,0.38,0.6])))
    if Scenario == 5: MidLLapse = pyro.sample("MidLLapse", dist.Categorical(probs=torch.tensor([0.0,0.1,0.9])))
    if Scenario == 6: MidLLapse = pyro.sample("MidLLapse", dist.Categorical(probs=torch.tensor([0.84,0.16,0.0])))
    if Scenario == 7: MidLLapse = pyro.sample("MidLLapse", dist.Categorical(probs=torch.tensor([0.25,0.31,0.44])))
    if Scenario == 8: MidLLapse = pyro.sample("MidLLapse", dist.Categorical(probs=torch.tensor([0.41,0.29,0.3])))
    if Scenario == 9: MidLLapse = pyro.sample("MidLLapse", dist.Categorical(probs=torch.tensor([0.23,0.42,0.35])))
    if Scenario == 10: MidLLapse = pyro.sample("MidLLapse", dist.Categorical(probs=torch.tensor([0.16,0.28,0.56])))

    if Scenario == 0: MvmtFeatures = pyro.sample("MvmtFeatures", dist.Categorical(probs=torch.tensor([0.25,0.55,0.2,0.0])))
    if Scenario == 1: MvmtFeatures = pyro.sample("MvmtFeatures", dist.Categorical(probs=torch.tensor([5.0e-2,0.1,0.1,0.75])))
    if Scenario == 2: MvmtFeatures = pyro.sample("MvmtFeatures", dist.Categorical(probs=torch.tensor([0.1,0.3,0.3,0.3])))
    if Scenario == 3: MvmtFeatures = pyro.sample("MvmtFeatures", dist.Categorical(probs=torch.tensor([0.18,0.38,0.34,0.1])))
    if Scenario == 4: MvmtFeatures = pyro.sample("MvmtFeatures", dist.Categorical(probs=torch.tensor([2.0e-2,2.0e-2,0.26,0.7])))
    if Scenario == 5: MvmtFeatures = pyro.sample("MvmtFeatures", dist.Categorical(probs=torch.tensor([5.0e-2,7.0e-2,5.0e-2,0.83])))
    if Scenario == 6: MvmtFeatures = pyro.sample("MvmtFeatures", dist.Categorical(probs=torch.tensor([0.1,0.25,0.15,0.5])))
    if Scenario == 7: MvmtFeatures = pyro.sample("MvmtFeatures", dist.Categorical(probs=torch.tensor([0.0,0.6,0.1,0.3])))
    if Scenario == 8: MvmtFeatures = pyro.sample("MvmtFeatures", dist.Categorical(probs=torch.tensor([0.2,0.1,0.2,0.5])))
    if Scenario == 9: MvmtFeatures = pyro.sample("MvmtFeatures", dist.Categorical(probs=torch.tensor([4.0e-2,0.0,4.0e-2,0.92])))
    if Scenario == 10: MvmtFeatures = pyro.sample("MvmtFeatures", dist.Categorical(probs=torch.tensor([0.5,0.35,9.0e-2,6.0e-2])))

    if Scenario == 0: RHRatio = pyro.sample("RHRatio", dist.Categorical(probs=torch.tensor([5.0e-2,0.5,0.45])))
    if Scenario == 1: RHRatio = pyro.sample("RHRatio", dist.Categorical(probs=torch.tensor([0.1,0.5,0.4])))
    if Scenario == 2: RHRatio = pyro.sample("RHRatio", dist.Categorical(probs=torch.tensor([0.4,0.15,0.45])))
    if Scenario == 3: RHRatio = pyro.sample("RHRatio", dist.Categorical(probs=torch.tensor([0.2,0.45,0.35])))
    if Scenario == 4: RHRatio = pyro.sample("RHRatio", dist.Categorical(probs=torch.tensor([0.8,5.0e-2,0.15])))
    if Scenario == 5: RHRatio = pyro.sample("RHRatio", dist.Categorical(probs=torch.tensor([0.0,0.0,1.0])))
    if Scenario == 6: RHRatio = pyro.sample("RHRatio", dist.Categorical(probs=torch.tensor([0.6,0.0,0.4])))
    if Scenario == 7: RHRatio = pyro.sample("RHRatio", dist.Categorical(probs=torch.tensor([0.0,0.7,0.3])))
    if Scenario == 8: RHRatio = pyro.sample("RHRatio", dist.Categorical(probs=torch.tensor([0.1,0.7,0.2])))
    if Scenario == 9: RHRatio = pyro.sample("RHRatio", dist.Categorical(probs=torch.tensor([0.4,0.4,0.2])))
    if Scenario == 10: RHRatio = pyro.sample("RHRatio", dist.Categorical(probs=torch.tensor([0.15,0.45,0.4])))

    if Scenario == 0: SfcWndShfDis = pyro.sample("SfcWndShfDis", dist.Categorical(probs=torch.tensor([0.65,5.0e-2,0.1,8.0e-2,4.0e-2,7.0e-2,1.0e-2])))
    if Scenario == 1: SfcWndShfDis = pyro.sample("SfcWndShfDis", dist.Categorical(probs=torch.tensor([0.65,5.0e-2,0.1,0.1,2.0e-2,7.0e-2,1.0e-2])))
    if Scenario == 2: SfcWndShfDis = pyro.sample("SfcWndShfDis", dist.Categorical(probs=torch.tensor([0.0,0.65,0.2,2.0e-2,6.0e-2,5.0e-2,2.0e-2])))
    if Scenario == 3: SfcWndShfDis = pyro.sample("SfcWndShfDis", dist.Categorical(probs=torch.tensor([0.12,2.0e-2,2.0e-2,2.0e-2,0.45,0.27,0.1])))
    if Scenario == 4: SfcWndShfDis = pyro.sample("SfcWndShfDis", dist.Categorical(probs=torch.tensor([6.0e-2,0.14,4.0e-2,4.0e-2,0.25,0.4,7.0e-2])))
    if Scenario == 5: SfcWndShfDis = pyro.sample("SfcWndShfDis", dist.Categorical(probs=torch.tensor([0.1,0.1,0.1,2.0e-2,0.0,0.56,0.12])))
    if Scenario == 6: SfcWndShfDis = pyro.sample("SfcWndShfDis", dist.Categorical(probs=torch.tensor([2.0e-2,5.0e-2,5.0e-2,0.0,0.35,0.33,0.2])))
    if Scenario == 7: SfcWndShfDis = pyro.sample("SfcWndShfDis", dist.Categorical(probs=torch.tensor([1.0e-2,0.1,0.15,0.4,0.0,0.23,0.11])))
    if Scenario == 8: SfcWndShfDis = pyro.sample("SfcWndShfDis", dist.Categorical(probs=torch.tensor([2.0e-2,0.1,0.5,0.3,1.0e-2,2.0e-2,5.0e-2])))
    if Scenario == 9: SfcWndShfDis = pyro.sample("SfcWndShfDis", dist.Categorical(probs=torch.tensor([6.0e-2,8.0e-2,4.0e-2,2.0e-2,0.6,0.14,6.0e-2])))
    if Scenario == 10: SfcWndShfDis = pyro.sample("SfcWndShfDis", dist.Categorical(probs=torch.tensor([5.0e-2,0.13,5.0e-2,0.39,0.13,0.15,0.1])))

    if Scenario == 0: SynForcng = pyro.sample("SynForcng", dist.Categorical(probs=torch.tensor([0.35,0.25,0.0,0.35,5.0e-2])))
    if Scenario == 1: SynForcng = pyro.sample("SynForcng", dist.Categorical(probs=torch.tensor([6.0e-2,0.1,6.0e-2,0.3,0.48])))
    if Scenario == 2: SynForcng = pyro.sample("SynForcng", dist.Categorical(probs=torch.tensor([0.1,0.27,0.4,8.0e-2,0.15])))
    if Scenario == 3: SynForcng = pyro.sample("SynForcng", dist.Categorical(probs=torch.tensor([0.35,0.2,0.1,0.25,0.1])))
    if Scenario == 4: SynForcng = pyro.sample("SynForcng", dist.Categorical(probs=torch.tensor([0.15,0.15,0.1,0.15,0.45])))
    if Scenario == 5: SynForcng = pyro.sample("SynForcng", dist.Categorical(probs=torch.tensor([0.15,0.1,5.0e-2,0.15,0.55])))
    if Scenario == 6: SynForcng = pyro.sample("SynForcng", dist.Categorical(probs=torch.tensor([0.15,0.1,0.1,0.25,0.4])))
    if Scenario == 7: SynForcng = pyro.sample("SynForcng", dist.Categorical(probs=torch.tensor([0.25,0.25,0.25,0.15,0.1])))
    if Scenario == 8: SynForcng = pyro.sample("SynForcng", dist.Categorical(probs=torch.tensor([0.25,0.2,0.15,0.2,0.2])))
    if Scenario == 9: SynForcng = pyro.sample("SynForcng", dist.Categorical(probs=torch.tensor([1.0e-2,5.0e-2,1.0e-2,5.0e-2,0.88])))
    if Scenario == 10: SynForcng = pyro.sample("SynForcng", dist.Categorical(probs=torch.tensor([0.2,0.2,0.35,0.15,0.1])))

    if Scenario == 0: TempDis = pyro.sample("TempDis", dist.Categorical(probs=torch.tensor([0.13,0.15,0.1,0.62])))
    if Scenario == 1: TempDis = pyro.sample("TempDis", dist.Categorical(probs=torch.tensor([0.15,0.15,0.25,0.45])))
    if Scenario == 2: TempDis = pyro.sample("TempDis", dist.Categorical(probs=torch.tensor([0.12,0.1,0.35,0.43])))
    if Scenario == 3: TempDis = pyro.sample("TempDis", dist.Categorical(probs=torch.tensor([0.1,0.15,0.4,0.35])))
    if Scenario == 4: TempDis = pyro.sample("TempDis", dist.Categorical(probs=torch.tensor([4.0e-2,4.0e-2,0.82,0.1])))
    if Scenario == 5: TempDis = pyro.sample("TempDis", dist.Categorical(probs=torch.tensor([5.0e-2,0.12,0.75,8.0e-2])))
    if Scenario == 6: TempDis = pyro.sample("TempDis", dist.Categorical(probs=torch.tensor([3.0e-2,3.0e-2,0.84,0.1])))
    if Scenario == 7: TempDis = pyro.sample("TempDis", dist.Categorical(probs=torch.tensor([5.0e-2,0.4,0.5,5.0e-2])))
    if Scenario == 8: TempDis = pyro.sample("TempDis", dist.Categorical(probs=torch.tensor([0.8,0.19,0.0,1.0e-2])))
    if Scenario == 9: TempDis = pyro.sample("TempDis", dist.Categorical(probs=torch.tensor([0.1,5.0e-2,0.4,0.45])))
    if Scenario == 10: TempDis = pyro.sample("TempDis", dist.Categorical(probs=torch.tensor([0.2,0.3,0.3,0.2])))

    if Scenario == 0: WindAloft = pyro.sample("WindAloft", dist.Categorical(probs=torch.tensor([0.0,0.95,1.0e-2,4.0e-2])))
    if Scenario == 1: WindAloft = pyro.sample("WindAloft", dist.Categorical(probs=torch.tensor([0.2,0.3,0.2,0.3])))
    if Scenario == 2: WindAloft = pyro.sample("WindAloft", dist.Categorical(probs=torch.tensor([5.0e-2,9.0e-2,0.59,0.27])))
    if Scenario == 3: WindAloft = pyro.sample("WindAloft", dist.Categorical(probs=torch.tensor([3.0e-2,0.32,0.42,0.23])))
    if Scenario == 4: WindAloft = pyro.sample("WindAloft", dist.Categorical(probs=torch.tensor([7.0e-2,0.66,2.0e-2,0.25])))
    if Scenario == 5: WindAloft = pyro.sample("WindAloft", dist.Categorical(probs=torch.tensor([0.5,0.0,0.0,0.5])))
    if Scenario == 6: WindAloft = pyro.sample("WindAloft", dist.Categorical(probs=torch.tensor([0.25,0.3,0.25,0.2])))
    if Scenario == 7: WindAloft = pyro.sample("WindAloft", dist.Categorical(probs=torch.tensor([0.2,0.14,0.43,0.23])))
    if Scenario == 8: WindAloft = pyro.sample("WindAloft", dist.Categorical(probs=torch.tensor([0.2,0.41,0.1,0.29])))
    if Scenario == 9: WindAloft = pyro.sample("WindAloft", dist.Categorical(probs=torch.tensor([0.96,0.0,0.0,4.0e-2])))
    if Scenario == 10: WindAloft = pyro.sample("WindAloft", dist.Categorical(probs=torch.tensor([3.0e-2,8.0e-2,0.33,0.56])))

    if Scenario == 0: WindFieldMt = pyro.sample("WindFieldMt", dist.Categorical(probs=torch.tensor([0.8,0.2])))
    if Scenario == 1: WindFieldMt = pyro.sample("WindFieldMt", dist.Categorical(probs=torch.tensor([0.35,0.65])))
    if Scenario == 2: WindFieldMt = pyro.sample("WindFieldMt", dist.Categorical(probs=torch.tensor([0.75,0.25])))
    if Scenario == 3: WindFieldMt = pyro.sample("WindFieldMt", dist.Categorical(probs=torch.tensor([0.7,0.3])))
    if Scenario == 4: WindFieldMt = pyro.sample("WindFieldMt", dist.Categorical(probs=torch.tensor([0.65,0.35])))
    if Scenario == 5: WindFieldMt = pyro.sample("WindFieldMt", dist.Categorical(probs=torch.tensor([0.15,0.85])))
    if Scenario == 6: WindFieldMt = pyro.sample("WindFieldMt", dist.Categorical(probs=torch.tensor([0.7,0.3])))
    if Scenario == 7: WindFieldMt = pyro.sample("WindFieldMt", dist.Categorical(probs=torch.tensor([0.3,0.7])))
    if Scenario == 8: WindFieldMt = pyro.sample("WindFieldMt", dist.Categorical(probs=torch.tensor([0.5,0.5])))
    if Scenario == 9: WindFieldMt = pyro.sample("WindFieldMt", dist.Categorical(probs=torch.tensor([1.0e-2,0.99])))
    if Scenario == 10: WindFieldMt = pyro.sample("WindFieldMt", dist.Categorical(probs=torch.tensor([0.7,0.3])))

    if Scenario == 0: WindFieldPln = pyro.sample("WindFieldPln", dist.Categorical(probs=torch.tensor([5.0e-2,0.6,2.0e-2,0.1,0.23,0.0])))
    if Scenario == 1: WindFieldPln = pyro.sample("WindFieldPln", dist.Categorical(probs=torch.tensor([8.0e-2,0.6,2.0e-2,0.1,0.2,0.0])))
    if Scenario == 2: WindFieldPln = pyro.sample("WindFieldPln", dist.Categorical(probs=torch.tensor([0.1,0.0,0.75,0.0,0.0,0.15])))
    if Scenario == 3: WindFieldPln = pyro.sample("WindFieldPln", dist.Categorical(probs=torch.tensor([0.1,0.15,0.2,5.0e-2,0.3,0.2])))
    if Scenario == 4: WindFieldPln = pyro.sample("WindFieldPln", dist.Categorical(probs=torch.tensor([0.43,0.1,0.15,6.0e-2,6.0e-2,0.2])))
    if Scenario == 5: WindFieldPln = pyro.sample("WindFieldPln", dist.Categorical(probs=torch.tensor([0.6,7.0e-2,1.0e-2,0.12,0.2,0.0])))
    if Scenario == 6: WindFieldPln = pyro.sample("WindFieldPln", dist.Categorical(probs=torch.tensor([0.25,1.0e-2,0.3,1.0e-2,3.0e-2,0.4])))
    if Scenario == 7: WindFieldPln = pyro.sample("WindFieldPln", dist.Categorical(probs=torch.tensor([4.0e-2,2.0e-2,4.0e-2,0.8,0.1,0.0])))
    if Scenario == 8: WindFieldPln = pyro.sample("WindFieldPln", dist.Categorical(probs=torch.tensor([0.2,0.3,5.0e-2,0.37,7.0e-2,1.0e-2])))
    if Scenario == 9: WindFieldPln = pyro.sample("WindFieldPln", dist.Categorical(probs=torch.tensor([0.6,8.0e-2,7.0e-2,3.0e-2,0.2,2.0e-2])))
    if Scenario == 10: WindFieldPln = pyro.sample("WindFieldPln", dist.Categorical(probs=torch.tensor([0.1,5.0e-2,0.1,5.0e-2,0.2,0.5])))

    return torch.tensor([ N0_7muVerMo
           , SubjVertMo
           , QGVertMotion
           , SatContMoist
           , RaoContMoist
           , VISCloudCov
           , IRCloudCover
           , AMInstabMt
           , WndHodograph
           , MorningBound
           , LoLevMoistAd
           , Date
           , MorningCIN
           , LIfr12ZDENSd
           , AMDewptCalPl
           , LatestCIN
           , LLIW
           ])

network = unknown
if __name__ == "__main__":
    import sys
    if '--test' in sys.argv:
        print("running test sample")
        print(network())



