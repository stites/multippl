#!/usr/bin/env python3

import os, sys
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from pyro.infer import Importance, EmpiricalMarginal
import torch
torch.set_num_threads(1)
import pyro
import numpy as np
import random
from pyro import poutine
import pyro.distributions as dist
from pyro.infer import Importance, EmpiricalMarginal
from pyro.infer import config_enumerate
import time



def network():
    HYPOVOLEMIA = pyro.sample("HYPOVOLEMIA", dist.Categorical(probs=torch.tensor([0.200000,0.800000])))
    LVFAILURE = pyro.sample("LVFAILURE", dist.Categorical(probs=torch.tensor([0.050000,0.950000])))
    STROKEVOLUME = pyro.sample("STROKEVOLUME", ((dist.Categorical(probs=torch.tensor([0.980000,0.010000,0.010000]))) if ((LVFAILURE == 0)) else (dist.Categorical(probs=torch.tensor([0.500000,0.490000,0.010000])))) if ((HYPOVOLEMIA == 0)) else ((dist.Categorical(probs=torch.tensor([0.950000,0.040000,0.010000]))) if ((LVFAILURE == 0)) else (dist.Categorical(probs=torch.tensor([0.050000,0.900000,0.050000])))))
    LVEDVOLUME = pyro.sample("LVEDVOLUME", ((dist.Categorical(probs=torch.tensor([0.950000,0.040000,0.010000]))) if ((LVFAILURE == 0))  else (dist.Categorical(probs=torch.tensor([0.010000,0.090000,0.900000])))) if ((HYPOVOLEMIA == 0)) else ((dist.Categorical(probs=torch.tensor([0.980000,0.010000,0.010000]))) if ((LVFAILURE == 0))  else (dist.Categorical(probs=torch.tensor([0.050000,0.900000,0.050000])))))
    PCWP = pyro.sample("PCWP", (dist.Categorical(probs=torch.tensor([0.950000,0.040000,0.010000]))) if ((LVEDVOLUME == 0)) else ((dist.Categorical(probs=torch.tensor([0.040000,0.950000,0.010000]))) if ((LVEDVOLUME == 1))  else (dist.Categorical(probs=torch.tensor([0.010000,0.040000,0.950000])))))
    CVP = pyro.sample("CVP", (dist.Categorical(probs=torch.tensor([0.950000,0.040000,0.010000]))) if ((LVEDVOLUME == 0))  else ((dist.Categorical(probs=torch.tensor([0.040000,0.950000,0.010000]))) if ((LVEDVOLUME == 1))  else (dist.Categorical(probs=torch.tensor([0.010000,0.290000,0.700000])))))
    HISTORY = pyro.sample("HISTORY", (dist.Categorical(probs=torch.tensor([0.900000,0.100000]))) if ((LVFAILURE == 0))  else (dist.Categorical(probs=torch.tensor([0.010000,0.990000]))))
    ERRLOWOUTPUT = pyro.sample("ERRLOWOUTPUT", dist.Categorical(probs=torch.tensor([0.050000,0.950000])))
    ERRCAUTER = pyro.sample("ERRCAUTER", dist.Categorical(probs=torch.tensor([0.100000,0.900000])))
    INSUFFANESTH = pyro.sample("INSUFFANESTH", dist.Categorical(probs=torch.tensor([0.100000,0.900000])))
    ANAPHYLAXIS = pyro.sample("ANAPHYLAXIS", dist.Categorical(probs=torch.tensor([0.010000,0.990000])))
    TPR = pyro.sample("TPR", (dist.Categorical(probs=torch.tensor([0.980000,0.010000,0.010000]))) if ((ANAPHYLAXIS == 0))  else (dist.Categorical(probs=torch.tensor([0.300000,0.400000,0.300000]))))
    KINKEDTUBE = pyro.sample("KINKEDTUBE", dist.Categorical(probs=torch.tensor([0.040000,0.960000])))
    FIO2 = pyro.sample("FIO2", dist.Categorical(probs=torch.tensor([0.050000,0.950000])))
    PULMEMBOLUS = pyro.sample("PULMEMBOLUS", dist.Categorical(probs=torch.tensor([0.010000,0.990000])))
    PAP = pyro.sample("PAP", (dist.Categorical(probs=torch.tensor([0.010000,0.190000,0.800000]))) if ((PULMEMBOLUS == 0))  else (dist.Categorical(probs=torch.tensor([0.050000,0.900000,0.050000]))))
    INTUBATION = pyro.sample("INTUBATION", dist.Categorical(probs=torch.tensor([0.920000,0.030000,0.050000])))
    SHUNT = pyro.sample("SHUNT", ((dist.Categorical(probs=torch.tensor([0.100000,0.900000]))) if ((PULMEMBOLUS == 0))  else (dist.Categorical(probs=torch.tensor([0.950000,0.050000])))) if ((INTUBATION == 0))  else (((dist.Categorical(probs=torch.tensor([0.100000,0.900000]))) if ((PULMEMBOLUS == 0))  else (dist.Categorical(probs=torch.tensor([0.950000,0.050000])))) if ((INTUBATION == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((PULMEMBOLUS == 0))  else (dist.Categorical(probs=torch.tensor([0.050000,0.950000]))))))
    DISCONNECT = pyro.sample("DISCONNECT", dist.Categorical(probs=torch.tensor([0.100000,0.900000])))
    MINVOLSET = pyro.sample("MINVOLSET", dist.Categorical(probs=torch.tensor([0.050000,0.900000,0.050000])))
    VENTMACH = pyro.sample("VENTMACH", (dist.Categorical(probs=torch.tensor([0.050000,0.930000,0.010000,0.010000]))) if ((MINVOLSET == 0))  else ((dist.Categorical(probs=torch.tensor([0.050000,0.010000,0.930000,0.010000]))) if ((MINVOLSET == 1))  else (dist.Categorical(probs=torch.tensor([0.050000,0.010000,0.010000,0.930000])))))
    VENTTUBE = pyro.sample("VENTTUBE", (((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTMACH == 0))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTMACH == 1))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTMACH == 2))  else (dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.970000,0.010000])))))) if ((DISCONNECT == 0))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTMACH == 0))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTMACH == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.970000,0.010000,0.010000]))) if ((VENTMACH == 2))  else (dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.010000,0.970000]))))))))
    VENTLUNG = pyro.sample("VENTLUNG", (((((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTTUBE == 0))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTTUBE == 1))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTTUBE == 2))  else (dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000])))))) if ((KINKEDTUBE == 0))  else ((dist.Categorical(probs=torch.tensor([0.300000,0.680000,0.010000,0.010000]))) if ((VENTTUBE == 0))  else ((dist.Categorical(probs=torch.tensor([0.950000,0.030000,0.010000,0.010000]))) if ((VENTTUBE == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.010000,0.970000]))) if ((VENTTUBE == 2))  else (dist.Categorical(probs=torch.tensor([0.010000,0.970000,0.010000,0.010000]))))))) if ((INTUBATION == 0))  else ((((dist.Categorical(probs=torch.tensor([0.950000,0.030000,0.010000,0.010000]))) if ((VENTTUBE == 0))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTTUBE == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.970000,0.010000,0.010000]))) if ((VENTTUBE == 2))  else (dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000])))))) if ((KINKEDTUBE == 0))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTTUBE == 0))  else ((dist.Categorical(probs=torch.tensor([0.500000,0.480000,0.010000,0.010000]))) if ((VENTTUBE == 1))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTTUBE == 2))  else (dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.970000,0.010000]))))))) if ((INTUBATION == 1))  else (((dist.Categorical(probs=torch.tensor([0.400000,0.580000,0.010000,0.010000]))) if ((VENTTUBE == 0))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTTUBE == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.970000,0.010000]))) if ((VENTTUBE == 2))  else (dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000])))))) if ((KINKEDTUBE == 0))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTTUBE == 0))  else ((dist.Categorical(probs=torch.tensor([0.300000,0.680000,0.010000,0.010000]))) if ((VENTTUBE == 1))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTTUBE == 2))  else (dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.010000,0.970000])))))))))))
    VENTALV = pyro.sample("VENTALV", ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTLUNG == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.010000,0.970000]))) if ((VENTLUNG == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.970000,0.010000]))) if ((VENTLUNG == 2))  else (dist.Categorical(probs=torch.tensor([0.030000,0.950000,0.010000,0.010000])))))) if ((INTUBATION == 0))  else (((dist.Categorical(probs=torch.tensor([0.010000,0.970000,0.010000,0.010000]))) if ((VENTLUNG == 0))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTLUNG == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.010000,0.970000]))) if ((VENTLUNG == 2))  else (dist.Categorical(probs=torch.tensor([0.010000,0.940000,0.040000,0.010000])))))) if ((INTUBATION == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.970000,0.010000]))) if ((VENTLUNG == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.970000,0.010000,0.010000]))) if ((VENTLUNG == 1))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTLUNG == 2))  else (dist.Categorical(probs=torch.tensor([0.010000,0.880000,0.100000,0.010000]))))))))
    ARTCO2 = pyro.sample("ARTCO2", (dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.980000]))) if ((VENTALV == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.980000]))) if ((VENTALV == 1))  else ((dist.Categorical(probs=torch.tensor([0.040000,0.920000,0.040000]))) if ((VENTALV == 2))  else (dist.Categorical(probs=torch.tensor([0.900000,0.090000,0.010000]))))))
    PVSAT = pyro.sample("PVSAT", ((dist.Categorical(probs=torch.tensor([1.000000,0.000000,0.000000]))) if ((VENTALV == 0))  else ((dist.Categorical(probs=torch.tensor([0.950000,0.040000,0.010000]))) if ((VENTALV == 1))  else ((dist.Categorical(probs=torch.tensor([1.000000,0.000000,0.000000]))) if ((VENTALV == 2))  else (dist.Categorical(probs=torch.tensor([0.010000,0.950000,0.040000])))))) if ((FIO2 == 0))  else ((dist.Categorical(probs=torch.tensor([0.990000,0.010000,0.000000]))) if ((VENTALV == 0))  else ((dist.Categorical(probs=torch.tensor([0.950000,0.040000,0.010000]))) if ((VENTALV == 1))  else ((dist.Categorical(probs=torch.tensor([0.950000,0.040000,0.010000]))) if ((VENTALV == 2))  else (dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.980000])))))))
    SAO2 = pyro.sample("SAO2", ((dist.Categorical(probs=torch.tensor([0.980000,0.010000,0.010000]))) if ((SHUNT == 0))  else (dist.Categorical(probs=torch.tensor([0.980000,0.010000,0.010000])))) if ((PVSAT == 0))  else (((dist.Categorical(probs=torch.tensor([0.010000,0.980000,0.010000]))) if ((SHUNT == 0))  else (dist.Categorical(probs=torch.tensor([0.980000,0.010000,0.010000])))) if ((PVSAT == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.980000]))) if ((SHUNT == 0))  else (dist.Categorical(probs=torch.tensor([0.690000,0.300000,0.010000]))))))
    CATECHOL = pyro.sample("CATECHOL", ((((((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.700000,0.300000]))))) if ((SAO2 == 0))  else (((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.050000,0.950000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.700000,0.300000]))))) if ((SAO2 == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.050000,0.950000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.950000,0.050000]))))))) if ((INSUFFANESTH == 0))  else (((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.050000,0.950000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.700000,0.300000]))))) if ((SAO2 == 0))  else (((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.050000,0.950000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.950000,0.050000]))))) if ((SAO2 == 1))  else ((dist.Categorical(probs=torch.tensor([0.050000,0.950000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.050000,0.950000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.950000,0.050000])))))))) if ((ARTCO2 == 0))  else (((((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.700000,0.300000]))))) if ((SAO2 == 0))  else (((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.050000,0.950000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.700000,0.300000]))))) if ((SAO2 == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.050000,0.950000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.990000,0.010000]))))))) if ((INSUFFANESTH == 0))  else (((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.050000,0.950000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.700000,0.300000]))))) if ((SAO2 == 0))  else (((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.050000,0.950000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.990000,0.010000]))))) if ((SAO2 == 1))  else ((dist.Categorical(probs=torch.tensor([0.050000,0.950000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.050000,0.950000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.990000,0.010000])))))))) if ((ARTCO2 == 1))  else ((((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.100000,0.900000]))))) if ((SAO2 == 0))  else (((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.100000,0.900000]))))) if ((SAO2 == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.300000,0.700000]))))))) if ((INSUFFANESTH == 0))  else (((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.100000,0.900000]))))) if ((SAO2 == 0))  else (((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.300000,0.700000]))))) if ((SAO2 == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.990000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.300000,0.700000]))))))))))))
    HR = pyro.sample("HR", (dist.Categorical(probs=torch.tensor([0.050000,0.900000,0.050000]))) if ((CATECHOL == 0))  else (dist.Categorical(probs=torch.tensor([0.010000,0.090000,0.900000]))))
    CO = pyro.sample("CO", ((((dist.Categorical(probs=torch.tensor([0.980000,0.010000,0.010000]))) if ((STROKEVOLUME == 0))  else ((dist.Categorical(probs=torch.tensor([0.950000,0.040000,0.010000]))) if ((STROKEVOLUME == 1))  else (dist.Categorical(probs=torch.tensor([0.300000,0.690000,0.010000]))))) if ((HR == 0))  else (((dist.Categorical(probs=torch.tensor([0.950000,0.040000,0.010000]))) if ((STROKEVOLUME == 0))  else ((dist.Categorical(probs=torch.tensor([0.040000,0.950000,0.010000]))) if ((STROKEVOLUME == 1))  else (dist.Categorical(probs=torch.tensor([0.010000,0.300000,0.690000]))))) if ((HR == 1))  else ((dist.Categorical(probs=torch.tensor([0.800000,0.190000,0.010000]))) if ((STROKEVOLUME == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.040000,0.950000]))) if ((STROKEVOLUME == 1))  else (dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.980000])))))))))
    BP = pyro.sample("BP", ((dist.Categorical(probs=torch.tensor([0.980000,0.010000,0.010000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.980000,0.010000,0.010000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.300000,0.600000,0.100000]))))) if ((CO == 0))  else (((dist.Categorical(probs=torch.tensor([0.980000,0.010000,0.010000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.100000,0.850000,0.050000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.050000,0.400000,0.550000]))))) if ((CO == 1))  else ((dist.Categorical(probs=torch.tensor([0.900000,0.090000,0.010000]))) if ((TPR == 0))  else ((dist.Categorical(probs=torch.tensor([0.050000,0.200000,0.750000]))) if ((TPR == 1))  else (dist.Categorical(probs=torch.tensor([0.010000,0.090000,0.900000])))))))
    HRSAT = pyro.sample("HRSAT", ((dist.Categorical(probs=torch.tensor([0.333333,0.333333,0.333333]))) if ((HR == 0))  else ((dist.Categorical(probs=torch.tensor([0.333333,0.333333,0.333333]))) if ((HR == 1))  else (dist.Categorical(probs=torch.tensor([0.010000,0.980000,0.010000]))))) if ((ERRCAUTER == 0))  else ((dist.Categorical(probs=torch.tensor([0.333333,0.333333,0.333333]))) if ((HR == 0))  else ((dist.Categorical(probs=torch.tensor([0.980000,0.010000,0.010000]))) if ((HR == 1))  else (dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.980000]))))))
    HREKG = pyro.sample("HREKG", ((dist.Categorical(probs=torch.tensor([0.333333,0.333333,0.333333]))) if ((HR == 0))  else ((dist.Categorical(probs=torch.tensor([0.333333,0.333333,0.333333]))) if ((HR == 1))  else (dist.Categorical(probs=torch.tensor([0.010000,0.980000,0.010000]))))) if ((ERRCAUTER == 0))  else ((dist.Categorical(probs=torch.tensor([0.333333,0.333333,0.333333]))) if ((HR == 0))  else ((dist.Categorical(probs=torch.tensor([0.980000,0.010000,0.010000]))) if ((HR == 1))  else (dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.980000]))))))
    HRBP = pyro.sample("HRBP", ((dist.Categorical(probs=torch.tensor([0.980000,0.010000,0.010000]))) if ((HR == 0))  else ((dist.Categorical(probs=torch.tensor([0.300000,0.400000,0.300000]))) if ((HR == 1))  else (dist.Categorical(probs=torch.tensor([0.010000,0.980000,0.010000]))))) if ((ERRLOWOUTPUT == 0))  else ((dist.Categorical(probs=torch.tensor([0.400000,0.590000,0.010000]))) if ((HR == 0))  else ((dist.Categorical(probs=torch.tensor([0.980000,0.010000,0.010000]))) if ((HR == 1))  else (dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.980000]))))))
    MINVOL = pyro.sample("MINVOL", ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTLUNG == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.010000,0.970000]))) if ((VENTLUNG == 1))  else ((dist.Categorical(probs=torch.tensor([0.500000,0.480000,0.010000,0.010000]))) if ((VENTLUNG == 2))  else (dist.Categorical(probs=torch.tensor([0.010000,0.970000,0.010000,0.010000])))))) if ((INTUBATION == 0))  else (((dist.Categorical(probs=torch.tensor([0.010000,0.970000,0.010000,0.010000]))) if ((VENTLUNG == 0))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTLUNG == 1))  else ((dist.Categorical(probs=torch.tensor([0.500000,0.480000,0.010000,0.010000]))) if ((VENTLUNG == 2))  else (dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.970000,0.010000])))))) if ((INTUBATION == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.970000,0.010000]))) if ((VENTLUNG == 0))  else ((dist.Categorical(probs=torch.tensor([0.600000,0.380000,0.010000,0.010000]))) if ((VENTLUNG == 1))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTLUNG == 2))  else (dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.010000,0.970000]))))))))
    EXPCO2 = pyro.sample("EXPCO2", ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTLUNG == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.970000,0.010000,0.010000]))) if ((VENTLUNG == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.970000,0.010000]))) if ((VENTLUNG == 2))  else (dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.010000,0.970000])))))) if ((ARTCO2 == 0))  else (((dist.Categorical(probs=torch.tensor([0.010000,0.970000,0.010000,0.010000]))) if ((VENTLUNG == 0))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTLUNG == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.970000,0.010000]))) if ((VENTLUNG == 2))  else (dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.010000,0.970000])))))) if ((ARTCO2 == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.970000,0.010000,0.010000]))) if ((VENTLUNG == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.970000,0.010000]))) if ((VENTLUNG == 1))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTLUNG == 2))  else (dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.010000,0.970000]))))))))
    PRESS = pyro.sample("PRESS", (((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTTUBE == 0))  else ((dist.Categorical(probs=torch.tensor([0.050000,0.250000,0.250000,0.450000]))) if ((VENTTUBE == 1))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTTUBE == 2))  else (dist.Categorical(probs=torch.tensor([0.200000,0.750000,0.040000,0.010000])))))) if ((KINKEDTUBE == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.010000,0.970000]))) if ((VENTTUBE == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.290000,0.300000,0.400000]))) if ((VENTTUBE == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.010000,0.970000]))) if ((VENTTUBE == 2))  else (dist.Categorical(probs=torch.tensor([0.010000,0.900000,0.080000,0.010000]))))))) if ((INTUBATION == 0))  else ((((dist.Categorical(probs=torch.tensor([0.010000,0.300000,0.490000,0.200000]))) if ((VENTTUBE == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.150000,0.250000,0.590000]))) if ((VENTTUBE == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.970000,0.010000,0.010000]))) if ((VENTTUBE == 2))  else (dist.Categorical(probs=torch.tensor([0.200000,0.700000,0.090000,0.010000])))))) if ((KINKEDTUBE == 0))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTTUBE == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.080000,0.900000]))) if ((VENTTUBE == 1))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTTUBE == 2))  else (dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.380000,0.600000]))))))) if ((INTUBATION == 1))  else (((dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.080000,0.900000]))) if ((VENTTUBE == 0))  else ((dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000]))) if ((VENTTUBE == 1))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.970000,0.010000]))) if ((VENTTUBE == 2))  else (dist.Categorical(probs=torch.tensor([0.970000,0.010000,0.010000,0.010000])))))) if ((KINKEDTUBE == 0))  else ((dist.Categorical(probs=torch.tensor([0.100000,0.840000,0.050000,0.010000]))) if ((VENTTUBE == 0))  else ((dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.010000,0.970000]))) if ((VENTTUBE == 1))  else ((dist.Categorical(probs=torch.tensor([0.400000,0.580000,0.010000,0.010000]))) if ((VENTTUBE == 2))  else (dist.Categorical(probs=torch.tensor([0.010000,0.010000,0.010000,0.970000])))))))))

    # let _ = observe CATECHOL == 0 in


    return torch.tensor([HISTORY, PCWP, CVP, PAP, MINVOL, PRESS, EXPCO2])

truth = \
 [ 0 *      0.0545
 + 1 *      0.9455
 , 0 *      0.114341
 + 1 *      0.678729
 + 2 *      0.20693
 + 3 *      0
 , 0 *      0.114341
 + 1 *      0.731104
 + 2 *      0.154555
 + 3 *      0
 , 0 *  0.049593406
 + 1 *  0.892782957
 + 2 *  0.057623637
 + 3 *  0
 , 0 *  0.778395253
 + 1 *  0.065350213
 + 2 *  0.026829179
 + 3 *  0.129425355
 , 0 *  0.027898466
 + 1 *  0.251138199
 + 2 *  0.224484428
 + 3 *  0.496478906
 , 0 *  0.032723106
 + 1 *  0.872013852
 + 2 *  0.05845093
 + 3 *  0.036812112
 ]

def model():
    ls = pyro.condition(network, data={k: torch.tensor(2) for k in ["BP", "HRBP", "HRSAT", "HREKG"]})()
    return torch.tensor([pyro.sample(f"g{i}", dist.Normal(ls[i] + 0.0, 1.0)) for i in range(len(ls))])


if __name__ == "__main__":
    import argparse

    parser = argparse.ArgumentParser(description="generate data for simple HMMs")
    parser.add_argument("--num-samples", default=1_000, type=int,)
    parser.add_argument("--num-runs", default=1, type=int,)
    parser.add_argument("--seed", default=0, type=int,)
    args = parser.parse_args()

    if args.num_runs > 1:
        print("not supported")
        sys.exit(1)
    else:
        # we are benchmarking, expect the same output as yodel
        torch.manual_seed(args.seed)
        np.random.seed(args.seed)
        random.seed(args.seed)
        start = time.time()
        importance = Importance(model, num_samples=args.num_samples)
        marginal = EmpiricalMarginal(importance.run())
        xs = marginal.mean.flatten()
        end = time.time()
        s = end - start
        print(" ".join([f"{x}" for x in xs]))
        print("{:.3f}ms".format(s * 1000))
        #print(sum(list(map(lambda x: abs(x[0] - x[1]), zip(xs, truth)))))
