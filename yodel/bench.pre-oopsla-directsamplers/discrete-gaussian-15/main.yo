exact fn network () -> Bool {
  let n30r = true in
  let n20r = if  n30r then flip 1.0 / 2.0 else false in
  let n31r = if !n20r then flip 1.0 / 2.0 else false in

  let n10r = if  n20r then flip 1.0 / 2.0 else false in
  let n21r = if !n10r then flip 1.0 / 2.0 else false in
  let n32r = if  n21r then flip 1.0 / 2.0 else false in
  let n33r = if !n21r then flip 1.0 / 2.0 else false in

  let n0   = n10r in

  let n10l = if n0    then flip 1.0 / 2.0 else false in

  let n20l = if  n10l then flip 1.0 / 2.0 else false in
  let n21l = if !n10l then flip 1.0 / 2.0 else false in

  let n30l = if  n20l then flip 1.0 / 2.0 else false in
  let n31l = if !n20l then flip 1.0 / 2.0 else false in
  let n32l = if  n21l then flip 1.0 / 2.0 else false in
  let n33l = if !n21l then flip 1.0 / 2.0 else false in
  observe !n20l in

  (n30l, n31l, n32l, n33l)
}


sample {
  p ~ poisson(3.0);
  ix <- p;
  npackets <- 0.0;
  while ix > 0 {
    pkts <- exact(network());
    ap <- if pkts[0] then 2.0 else -2.0;
    bp <- if pkts[1] then 2.0 else -2.0;
    cp <- if pkts[2] then 2.0 else -2.0;
    dp <- if pkts[3] then 2.0 else -2.0;
    a ~ normal(ap, 1.0);
    b ~ normal(bp, 1.0);
    c ~ normal(cp, 1.0);
    d ~ normal(dp, 1.0);
    npackets <- npackets + a + b + c + d;
    ix <- ix - 1;
    true
  };
  npackets
}
