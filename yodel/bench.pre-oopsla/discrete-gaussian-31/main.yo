exact fn network () -> Bool {
let n40r = true in
let n30r = if  n40r then flip 1.0 / 2.0 else false in
let n41r = if !n30r then flip 1.0 / 2.0 else false in

let n20r = if  n30r then flip 1.0 / 2.0 else false in

let n31r = if !n20r then flip 1.0 / 2.0 else false in
let n42r = if  n31r then flip 1.0 / 2.0 else false in
let n43r = if !n31r then flip 1.0 / 2.0 else false in

let n10r = if  n20r then flip 1.0 / 2.0 else false in
let n21r = if !n10r then flip 1.0 / 2.0 else false in
let n32r = if  n21r then flip 1.0 / 2.0 else false in
let n33r = if !n21r then flip 1.0 / 2.0 else false in

let n44r = if  n32r then flip 1.0 / 2.0 else false in
let n45r = if !n32r then flip 1.0 / 2.0 else false in
let n46r = if  n33r then flip 1.0 / 2.0 else false in
let n47r = if !n33r then flip 1.0 / 2.0 else false in

let n0   = n10r in

let n10l = if n0   then flip 1.0 / 2.0 else false in

let n20l = if  n10l then flip 1.0 / 2.0 else false in
let n21l = if !n10l then flip 1.0 / 2.0 else false in

let n30l = if  n20l then flip 1.0 / 2.0 else false in
let n31l = if !n20l then flip 1.0 / 2.0 else false in
let n32l = if  n21l then flip 1.0 / 2.0 else false in
let n33l = if !n21l then flip 1.0 / 2.0 else false in

let n40l = if  n30l then flip 1.0 / 2.0 else false in
let n41l = if !n30l then flip 1.0 / 2.0 else false in
let n42l = if  n31l then flip 1.0 / 2.0 else false in
let n43l = if !n31l then flip 1.0 / 2.0 else false in
let n44l = if  n32l then flip 1.0 / 2.0 else false in
let n45l = if !n32l then flip 1.0 / 2.0 else false in
let n46l = if  n33l then flip 1.0 / 2.0 else false in
let n47l = if !n33l then flip 1.0 / 2.0 else false in
observe !n30l in


  (n40l , n41l , n42l , n43l , n44l , n45l , n46l , n47l)
}


sample {
  p ~ poisson(3.0);
  ix <- p;
  expt <- 0.0;
  while ix > 0 {
    pkts <- exact(network());
    p0 <- if pkts[0] then 2.0 else -2.0;
    p1 <- if pkts[1] then 2.0 else -2.0;
    p2 <- if pkts[2] then 2.0 else -2.0;
    p3 <- if pkts[3] then 2.0 else -2.0;
    p4 <- if pkts[4] then 2.0 else -2.0;
    p5 <- if pkts[5] then 2.0 else -2.0;
    p6 <- if pkts[6] then 2.0 else -2.0;
    p7 <- if pkts[7] then 2.0 else -2.0;
    s0 ~ normal(p0, 1.0);
    s1 ~ normal(p1, 1.0);
    s2 ~ normal(p2, 1.0);
    s3 ~ normal(p3, 1.0);
    s4 ~ normal(p4, 1.0);
    s5 ~ normal(p5, 1.0);
    s6 ~ normal(p6, 1.0);
    s7 ~ normal(p7, 1.0);
    expt <- expt + s0 + s1 + s2 + s3 + s4 + s5 + s6 + s7;
    ix <- ix - 1;
    true
  };
  expt
}
