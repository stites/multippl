sample{
exact {
  let st  = flip 0.5 in
  // let st  = sample(exact(flip 0.5)) in
  let r24 = flip 1.0 / 4.0 in
  let r34 = flip 1.0 / 5.0 in
  observe !(st && r24) in
  let r4l = (st && r24) in
  let r4r = (!st && r34) in
  let r4 = r4l || r4r in
  trace (false) r4
}
}


// exact {
//   let st = flip 0.5 in
//   let l = if  !st then flip 1.0 / 2.0 else false in
//   let r = if   st then flip 1.0 / 2.0 else false in
//   let fin = r || l in
//   observe !r in
//   fin
// };

// sample {
//   sl <- exact {
//     let st = flip 0.5 in
//     let l = if  !st then flip 1.0 / 2.0 else false in
//     (st, l)
//   };
//   exact {
//     let r = if sl[0] then flip 1.0 / 2.0 else false in
//     let fin = r || sl[1] in
//     observe !r in
//     trace (false) fin
//   }
// }



// exact {
//   let st  = flip 0.5 in
//   let l   = if  st then flip 1.0 / 2.0 else false in
//   let r   = if !st then flip 1.0 / 2.0 else false in
//   let fin = l || r in
//   observe !st in
//   trace (false) fin
// }

// exact {
//   // "or"
//   let l   = flip 1.0 / 2.0 in
//   let r   = flip 1.0 / 2.0 in
//   let fin = l || r
//   trace (fin) fin
// }
// sample {
//   st ~ bern(0.5);
//   l <- if ( st) { ~( bern(0.5)) } else { false };
//   r <- if (!st) { ~( bern(0.5)) } else { false };

//   fin <- if (l || r) { ~(bern(0.5)) } else { false };
//   trace (fin) fin
// }

// sample {
//   lr <- exact {
//     let st = flip 0.5 in
//     let l = if  st then flip 1.0 / 2.0 else false in
//     let r = if !st then flip 1.0 / 2.0 else false in
//     (l, r)
//   };
//   exact {
//     let fin = if lr[0] || lr[1] then flip 0.5 else false in
//     trace (fin) fin
//   }
// }
// exact {
//   let st  = flip 0.5 in
//   let l   = if  st then flip 1.0 / 2.0 else false in
//   let r   = if !st then flip 1.0 / 2.0 else false in
//   let fin = if l || r then flip 0.5 else false in
//   trace (fin) fin
// }
